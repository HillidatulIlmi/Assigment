{"cells":[{"cell_type":"markdown","metadata":{"id":"yuwQu1_9ceRD"},"source":["# 1- Perkenalan\n",">"]},{"cell_type":"markdown","source":["> Bab pengenalan harus diisi dengan identitas"],"metadata":{"id":"X6xxYcpO-4gZ"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"koOvrdePN0BA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1655692815555,"user_tz":-480,"elapsed":30827,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"3ace9ec3-40d5-46f3-d9f1-1e21c650b8b7"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","metadata":{"id":"gyOeR4L9ceRO"},"source":["Nama : Hillidatul Ilmi\n","\n","Batch : FTDS-012\n","\n","Dataset : Linear Regression menggunakan dataset incurance dan Logistic Regressioon menggunakan dataset GalaxMorphoogy\n","\n","Objective :\n","1. Linear Regression untuk memprediksi biaya asuransi\n","2. Logistic Regression untuk mengklasifikasikan tipe galaksi"]},{"cell_type":"markdown","metadata":{"id":"32-v3lzlceRP"},"source":["# 3 - Import Libraries"]},{"cell_type":"markdown","source":["> Cell pertama pada notebook harus berisi dan hanya berisi semua library yang digunakan dalam project."],"metadata":{"id":"H2B0byNo_GSo"}},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cDsYGmwkceRS","executionInfo":{"status":"ok","timestamp":1655692900108,"user_tz":-480,"elapsed":14685,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"5ae5ee0c-036f-475e-b2c8-43fdad30c3c7"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting feature-engine\n","  Downloading feature_engine-1.4.0-py2.py3-none-any.whl (276 kB)\n","\u001b[K     |████████████████████████████████| 276 kB 5.1 MB/s \n","\u001b[?25hCollecting statsmodels>=0.11.1\n","  Downloading statsmodels-0.13.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (9.8 MB)\n","\u001b[K     |████████████████████████████████| 9.8 MB 32.8 MB/s \n","\u001b[?25hRequirement already satisfied: scikit-learn>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from feature-engine) (1.0.2)\n","Requirement already satisfied: numpy>=1.18.2 in /usr/local/lib/python3.7/dist-packages (from feature-engine) (1.21.6)\n","Requirement already satisfied: scipy>=1.4.1 in /usr/local/lib/python3.7/dist-packages (from feature-engine) (1.4.1)\n","Requirement already satisfied: pandas>=1.0.3 in /usr/local/lib/python3.7/dist-packages (from feature-engine) (1.3.5)\n","Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=1.0.3->feature-engine) (2022.1)\n","Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=1.0.3->feature-engine) (2.8.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas>=1.0.3->feature-engine) (1.15.0)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=1.0.0->feature-engine) (3.1.0)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=1.0.0->feature-engine) (1.1.0)\n","Requirement already satisfied: packaging>=21.3 in /usr/local/lib/python3.7/dist-packages (from statsmodels>=0.11.1->feature-engine) (21.3)\n","Requirement already satisfied: patsy>=0.5.2 in /usr/local/lib/python3.7/dist-packages (from statsmodels>=0.11.1->feature-engine) (0.5.2)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging>=21.3->statsmodels>=0.11.1->feature-engine) (3.0.9)\n","Installing collected packages: statsmodels, feature-engine\n","  Attempting uninstall: statsmodels\n","    Found existing installation: statsmodels 0.10.2\n","    Uninstalling statsmodels-0.10.2:\n","      Successfully uninstalled statsmodels-0.10.2\n","Successfully installed feature-engine-1.4.0 statsmodels-0.13.2\n"]}],"source":["# Mendefinisikan Libraries\n","\n","!pip install feature-engine\n","import pandas as pd \n","import numpy as np \n","import matplotlib.pyplot as plt \n","import seaborn as sns \n","import plotly.express as px \n","from sklearn.model_selection import train_test_split\n","from feature_engine.outliers import Winsorizer \n","from sklearn.preprocessing import OrdinalEncoder \n","from sklearn.preprocessing import MinMaxScaler \n","from sklearn.preprocessing import OneHotEncoder \n","from sklearn.linear_model import LinearRegression\n","from sklearn.metrics import mean_absolute_error \n","from sklearn.metrics import r2_score \n","from sklearn.metrics import accuracy_score"]},{"cell_type":"markdown","metadata":{"id":"TQAyiqA8ceRV"},"source":["# 4 - Data Loading"]},{"cell_type":"markdown","source":["> Bagian ini berisi proses penyiapan data sebelum dilakukan eksplorasi data lebih lanjut. Proses Data Loading dapat berupa memberi nama baru untuk setiap kolom, mengecek ukuran dataset, dll."],"metadata":{"id":"FI2exuyB_R-Y"}},{"cell_type":"markdown","metadata":{"id":"ZU4hiWFnceRY"},"source":["## Dataset Linear Regression"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"4Oj-D0u2ceRZ","executionInfo":{"status":"ok","timestamp":1655692972899,"user_tz":-480,"elapsed":407,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"ed67d254-919a-4f9a-8265-9ac33bd3988b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      age     sex     bmi  children smoker     region      charges\n","0      19  female  27.900         0    yes  southwest  16884.92400\n","1      18    male  33.770         1     no  southeast   1725.55230\n","2      28    male  33.000         3     no  southeast   4449.46200\n","3      33    male  22.705         0     no  northwest  21984.47061\n","4      32    male  28.880         0     no  northwest   3866.85520\n","...   ...     ...     ...       ...    ...        ...          ...\n","1333   50    male  30.970         3     no  northwest  10600.54830\n","1334   18  female  31.920         0     no  northeast   2205.98080\n","1335   18  female  36.850         0     no  southeast   1629.83350\n","1336   21  female  25.800         0     no  southwest   2007.94500\n","1337   61  female  29.070         0    yes  northwest  29141.36030\n","\n","[1338 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-a214c0ba-2283-4997-8a1e-b48dbfe85f29\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>smoker</th>\n","      <th>region</th>\n","      <th>charges</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19</td>\n","      <td>female</td>\n","      <td>27.900</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>southwest</td>\n","      <td>16884.92400</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>18</td>\n","      <td>male</td>\n","      <td>33.770</td>\n","      <td>1</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1725.55230</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>male</td>\n","      <td>33.000</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>4449.46200</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>male</td>\n","      <td>22.705</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>21984.47061</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32</td>\n","      <td>male</td>\n","      <td>28.880</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>3866.85520</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1333</th>\n","      <td>50</td>\n","      <td>male</td>\n","      <td>30.970</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>10600.54830</td>\n","    </tr>\n","    <tr>\n","      <th>1334</th>\n","      <td>18</td>\n","      <td>female</td>\n","      <td>31.920</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northeast</td>\n","      <td>2205.98080</td>\n","    </tr>\n","    <tr>\n","      <th>1335</th>\n","      <td>18</td>\n","      <td>female</td>\n","      <td>36.850</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1629.83350</td>\n","    </tr>\n","    <tr>\n","      <th>1336</th>\n","      <td>21</td>\n","      <td>female</td>\n","      <td>25.800</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southwest</td>\n","      <td>2007.94500</td>\n","    </tr>\n","    <tr>\n","      <th>1337</th>\n","      <td>61</td>\n","      <td>female</td>\n","      <td>29.070</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>northwest</td>\n","      <td>29141.36030</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1338 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a214c0ba-2283-4997-8a1e-b48dbfe85f29')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a214c0ba-2283-4997-8a1e-b48dbfe85f29 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a214c0ba-2283-4997-8a1e-b48dbfe85f29');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}],"source":["# Menampilkan data yang akan digunakan dalam analisis atau memuat dari kumpulan data \n","data = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data/insurance.csv')\n","data"]},{"cell_type":"code","execution_count":4,"metadata":{"id":"mdfHmra_ceRd","executionInfo":{"status":"ok","timestamp":1655692981748,"user_tz":-480,"elapsed":374,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}}},"outputs":[],"source":["# Mengandakan(duplicate) dataset nya, jika ada perubahan kolom atau atribut tetap bisa dibandingkan dengan dataset asli\n","data_copy = data.copy()"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"M8m2TftsceRe","executionInfo":{"status":"ok","timestamp":1655692987757,"user_tz":-480,"elapsed":519,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"49ff66d5-c397-4eea-dae7-96e16aca8bf8"},"outputs":[{"output_type":"stream","name":"stdout","text":["(1338, 7)\n"]}],"source":["# Mengecek ukuran dataset yang akan digunakan\n","print(data.shape)"]},{"cell_type":"markdown","metadata":{"id":"ikWK1hAGceRi"},"source":["Berdasarkan perintah .shape bahwa ukuran dataset rideshare terdiri dari 1338 baris dan 7 kolom."]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8LZVatybceRj","executionInfo":{"status":"ok","timestamp":1655692991248,"user_tz":-480,"elapsed":459,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"36b29f2d-3777-4ed3-c9c0-a980bfc1ff70"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['age', 'sex', 'bmi', 'children', 'smoker', 'region', 'charges'], dtype='object')"]},"metadata":{},"execution_count":6}],"source":["# Melihat Nama-Nama kolom dari tabel dataset rideshare\n","data.columns"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"iYu0en0dceRk","executionInfo":{"status":"ok","timestamp":1655693233112,"user_tz":-480,"elapsed":370,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"377cab06-09a2-4044-b1e8-e6664829ec2d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      usia jeniskelamin     bmi  children perokok    wilayah        biaya\n","0       19       female  27.900         0     yes  southwest  16884.92400\n","1       18         male  33.770         1      no  southeast   1725.55230\n","2       28         male  33.000         3      no  southeast   4449.46200\n","3       33         male  22.705         0      no  northwest  21984.47061\n","4       32         male  28.880         0      no  northwest   3866.85520\n","...    ...          ...     ...       ...     ...        ...          ...\n","1333    50         male  30.970         3      no  northwest  10600.54830\n","1334    18       female  31.920         0      no  northeast   2205.98080\n","1335    18       female  36.850         0      no  southeast   1629.83350\n","1336    21       female  25.800         0      no  southwest   2007.94500\n","1337    61       female  29.070         0     yes  northwest  29141.36030\n","\n","[1338 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-3a6d5701-e5e8-4e0e-a20d-5d4a4d42c45d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>usia</th>\n","      <th>jeniskelamin</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>perokok</th>\n","      <th>wilayah</th>\n","      <th>biaya</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19</td>\n","      <td>female</td>\n","      <td>27.900</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>southwest</td>\n","      <td>16884.92400</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>18</td>\n","      <td>male</td>\n","      <td>33.770</td>\n","      <td>1</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1725.55230</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>male</td>\n","      <td>33.000</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>4449.46200</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>male</td>\n","      <td>22.705</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>21984.47061</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32</td>\n","      <td>male</td>\n","      <td>28.880</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>3866.85520</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1333</th>\n","      <td>50</td>\n","      <td>male</td>\n","      <td>30.970</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>10600.54830</td>\n","    </tr>\n","    <tr>\n","      <th>1334</th>\n","      <td>18</td>\n","      <td>female</td>\n","      <td>31.920</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northeast</td>\n","      <td>2205.98080</td>\n","    </tr>\n","    <tr>\n","      <th>1335</th>\n","      <td>18</td>\n","      <td>female</td>\n","      <td>36.850</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1629.83350</td>\n","    </tr>\n","    <tr>\n","      <th>1336</th>\n","      <td>21</td>\n","      <td>female</td>\n","      <td>25.800</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southwest</td>\n","      <td>2007.94500</td>\n","    </tr>\n","    <tr>\n","      <th>1337</th>\n","      <td>61</td>\n","      <td>female</td>\n","      <td>29.070</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>northwest</td>\n","      <td>29141.36030</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1338 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3a6d5701-e5e8-4e0e-a20d-5d4a4d42c45d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3a6d5701-e5e8-4e0e-a20d-5d4a4d42c45d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3a6d5701-e5e8-4e0e-a20d-5d4a4d42c45d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}],"source":["# Saya akan mengubah seluruh nama kolom, agar lebih gampang memahami isi datanya\n","\n","data.rename(columns={'age': 'usia','sex': 'jeniskelamin','smoker': 'perokok','region': 'wilayah','charges':'biaya'}, inplace=True)\n","data"]},{"cell_type":"markdown","metadata":{"id":"BkbbOFMdceRm"},"source":["Nama-Nama kolom telah diubah, sehingga akan lebih mudah memahami makna data dan lebih mudah menafsirkan definisi setip data."]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jEjIb_a_ceRn","executionInfo":{"status":"ok","timestamp":1655693243890,"user_tz":-480,"elapsed":20,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"9d1244d4-ef69-47e4-ae86-9948a2c56717"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1338 entries, 0 to 1337\n","Data columns (total 7 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   usia          1338 non-null   int64  \n"," 1   jeniskelamin  1338 non-null   object \n"," 2   bmi           1338 non-null   float64\n"," 3   children      1338 non-null   int64  \n"," 4   perokok       1338 non-null   object \n"," 5   wilayah       1338 non-null   object \n"," 6   biaya         1338 non-null   float64\n","dtypes: float64(2), int64(2), object(3)\n","memory usage: 73.3+ KB\n"]}],"source":["# Mengecek informasi dataset nya\n","data.info()"]},{"cell_type":"markdown","metadata":{"id":"v7tZkgqXceRo"},"source":["Berdasarkan perintah data.info() dari semua 6 kolom, terdapat 2 kolom bertipe integral atau numerik dan terdapat 3 kolom bertipe object atau kategorik."]},{"cell_type":"markdown","source":["## DataSet Logistic Regression"],"metadata":{"id":"k2pBzMxjHHKC"}},{"cell_type":"code","source":["# Menampilkan data yang akan digunakan dalam analisis atau memuat dari kumpulan data \n","data1 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data/GalaxyMorphology.csv')\n","data1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"0ML-M4qpHQan","executionInfo":{"status":"ok","timestamp":1655695226071,"user_tz":-480,"elapsed":605,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"89a12a92-ef39-4f17-aaeb-d5ff6a9729bb"},"execution_count":62,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Unnamed: 0     TType          K            C         A         S  \\\n","0               0  1.854829   6.560199     0.357051  0.932151  0.850992   \n","1               1  4.815538  25.950829     0.313292  0.610999  0.723122   \n","2               2  0.678056   6.867416     0.408286  0.881524  0.813231   \n","3               3 -0.547708  11.877941 -9999.999999  0.838779  0.816965   \n","4               4  2.028543  20.458965     0.446453  0.839216  0.801140   \n","...           ...       ...        ...          ...       ...       ...   \n","19995       19995  4.631655  29.018608     0.358020  0.602471  0.832848   \n","19996       19996 -2.179893  15.245582     0.470026  0.842624  0.868289   \n","19997       19997  1.876151   6.907812     0.323334  0.830340  0.950820   \n","19998       19998  5.053256  27.981613     0.393574  0.632766  0.825990   \n","19999       19999 -0.558501   6.557439     0.346322  0.878231  0.882251   \n","\n","             G2         H  CNN2classes1stClass  \n","0      1.588183  0.697214                    1  \n","1      1.533653  0.719412                    1  \n","2      1.743747  0.750872                    1  \n","3      1.672529  0.771995                    1  \n","4      1.107665  0.610453                    1  \n","...         ...       ...                  ...  \n","19995  1.611594  0.735315                    1  \n","19996  1.313089  0.649996                    1  \n","19997  1.406042  0.671217                    1  \n","19998  1.659363  0.379448                    1  \n","19999  1.616493  0.738060                    1  \n","\n","[20000 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-cc638a55-7199-41df-b503-0dd08610af1e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>TType</th>\n","      <th>K</th>\n","      <th>C</th>\n","      <th>A</th>\n","      <th>S</th>\n","      <th>G2</th>\n","      <th>H</th>\n","      <th>CNN2classes1stClass</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1.854829</td>\n","      <td>6.560199</td>\n","      <td>0.357051</td>\n","      <td>0.932151</td>\n","      <td>0.850992</td>\n","      <td>1.588183</td>\n","      <td>0.697214</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>4.815538</td>\n","      <td>25.950829</td>\n","      <td>0.313292</td>\n","      <td>0.610999</td>\n","      <td>0.723122</td>\n","      <td>1.533653</td>\n","      <td>0.719412</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>0.678056</td>\n","      <td>6.867416</td>\n","      <td>0.408286</td>\n","      <td>0.881524</td>\n","      <td>0.813231</td>\n","      <td>1.743747</td>\n","      <td>0.750872</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>-0.547708</td>\n","      <td>11.877941</td>\n","      <td>-9999.999999</td>\n","      <td>0.838779</td>\n","      <td>0.816965</td>\n","      <td>1.672529</td>\n","      <td>0.771995</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>2.028543</td>\n","      <td>20.458965</td>\n","      <td>0.446453</td>\n","      <td>0.839216</td>\n","      <td>0.801140</td>\n","      <td>1.107665</td>\n","      <td>0.610453</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>19995</th>\n","      <td>19995</td>\n","      <td>4.631655</td>\n","      <td>29.018608</td>\n","      <td>0.358020</td>\n","      <td>0.602471</td>\n","      <td>0.832848</td>\n","      <td>1.611594</td>\n","      <td>0.735315</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19996</th>\n","      <td>19996</td>\n","      <td>-2.179893</td>\n","      <td>15.245582</td>\n","      <td>0.470026</td>\n","      <td>0.842624</td>\n","      <td>0.868289</td>\n","      <td>1.313089</td>\n","      <td>0.649996</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19997</th>\n","      <td>19997</td>\n","      <td>1.876151</td>\n","      <td>6.907812</td>\n","      <td>0.323334</td>\n","      <td>0.830340</td>\n","      <td>0.950820</td>\n","      <td>1.406042</td>\n","      <td>0.671217</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19998</th>\n","      <td>19998</td>\n","      <td>5.053256</td>\n","      <td>27.981613</td>\n","      <td>0.393574</td>\n","      <td>0.632766</td>\n","      <td>0.825990</td>\n","      <td>1.659363</td>\n","      <td>0.379448</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19999</th>\n","      <td>19999</td>\n","      <td>-0.558501</td>\n","      <td>6.557439</td>\n","      <td>0.346322</td>\n","      <td>0.878231</td>\n","      <td>0.882251</td>\n","      <td>1.616493</td>\n","      <td>0.738060</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>20000 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cc638a55-7199-41df-b503-0dd08610af1e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cc638a55-7199-41df-b503-0dd08610af1e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cc638a55-7199-41df-b503-0dd08610af1e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["# Mengandakan(duplicate) dataset nya, jika ada perubahan kolom atau atribut tetap bisa dibandingkan dengan dataset asli\n","data_copy = data1.copy()"],"metadata":{"id":"wK63Pa_PHTrM","executionInfo":{"status":"ok","timestamp":1655695234033,"user_tz":-480,"elapsed":347,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}}},"execution_count":63,"outputs":[]},{"cell_type":"code","source":["print(data1.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O9ws5gRCHXH-","executionInfo":{"status":"ok","timestamp":1655695237412,"user_tz":-480,"elapsed":356,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"4086b4fa-3564-4963-e77b-32ad34a8df59"},"execution_count":64,"outputs":[{"output_type":"stream","name":"stdout","text":["(20000, 9)\n"]}]},{"cell_type":"markdown","source":["Berdasarkan perintah .shape bahwa ukuran dataset rideshare terdiri dari 2000 baris dan 9 kolom."],"metadata":{"id":"v3mEc41VHebw"}},{"cell_type":"code","source":["# Saya akan mengubah seluruh nama kolom, agar lebih gampang memahami isi datanya\n","\n","data1.rename(columns={'CNN2classes1stClass': 'target'}, inplace=True)\n","data1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"ILo1qUOdHlFD","executionInfo":{"status":"ok","timestamp":1655695369982,"user_tz":-480,"elapsed":384,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"17aa4d5b-d9e2-41aa-90f1-1803bb30d4b2"},"execution_count":65,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Unnamed: 0     TType          K            C         A         S  \\\n","0               0  1.854829   6.560199     0.357051  0.932151  0.850992   \n","1               1  4.815538  25.950829     0.313292  0.610999  0.723122   \n","2               2  0.678056   6.867416     0.408286  0.881524  0.813231   \n","3               3 -0.547708  11.877941 -9999.999999  0.838779  0.816965   \n","4               4  2.028543  20.458965     0.446453  0.839216  0.801140   \n","...           ...       ...        ...          ...       ...       ...   \n","19995       19995  4.631655  29.018608     0.358020  0.602471  0.832848   \n","19996       19996 -2.179893  15.245582     0.470026  0.842624  0.868289   \n","19997       19997  1.876151   6.907812     0.323334  0.830340  0.950820   \n","19998       19998  5.053256  27.981613     0.393574  0.632766  0.825990   \n","19999       19999 -0.558501   6.557439     0.346322  0.878231  0.882251   \n","\n","             G2         H  target  \n","0      1.588183  0.697214       1  \n","1      1.533653  0.719412       1  \n","2      1.743747  0.750872       1  \n","3      1.672529  0.771995       1  \n","4      1.107665  0.610453       1  \n","...         ...       ...     ...  \n","19995  1.611594  0.735315       1  \n","19996  1.313089  0.649996       1  \n","19997  1.406042  0.671217       1  \n","19998  1.659363  0.379448       1  \n","19999  1.616493  0.738060       1  \n","\n","[20000 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-16bb721a-c592-4ae1-b591-6fb3aaaefd11\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>TType</th>\n","      <th>K</th>\n","      <th>C</th>\n","      <th>A</th>\n","      <th>S</th>\n","      <th>G2</th>\n","      <th>H</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1.854829</td>\n","      <td>6.560199</td>\n","      <td>0.357051</td>\n","      <td>0.932151</td>\n","      <td>0.850992</td>\n","      <td>1.588183</td>\n","      <td>0.697214</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>4.815538</td>\n","      <td>25.950829</td>\n","      <td>0.313292</td>\n","      <td>0.610999</td>\n","      <td>0.723122</td>\n","      <td>1.533653</td>\n","      <td>0.719412</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>0.678056</td>\n","      <td>6.867416</td>\n","      <td>0.408286</td>\n","      <td>0.881524</td>\n","      <td>0.813231</td>\n","      <td>1.743747</td>\n","      <td>0.750872</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>-0.547708</td>\n","      <td>11.877941</td>\n","      <td>-9999.999999</td>\n","      <td>0.838779</td>\n","      <td>0.816965</td>\n","      <td>1.672529</td>\n","      <td>0.771995</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>2.028543</td>\n","      <td>20.458965</td>\n","      <td>0.446453</td>\n","      <td>0.839216</td>\n","      <td>0.801140</td>\n","      <td>1.107665</td>\n","      <td>0.610453</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>19995</th>\n","      <td>19995</td>\n","      <td>4.631655</td>\n","      <td>29.018608</td>\n","      <td>0.358020</td>\n","      <td>0.602471</td>\n","      <td>0.832848</td>\n","      <td>1.611594</td>\n","      <td>0.735315</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19996</th>\n","      <td>19996</td>\n","      <td>-2.179893</td>\n","      <td>15.245582</td>\n","      <td>0.470026</td>\n","      <td>0.842624</td>\n","      <td>0.868289</td>\n","      <td>1.313089</td>\n","      <td>0.649996</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19997</th>\n","      <td>19997</td>\n","      <td>1.876151</td>\n","      <td>6.907812</td>\n","      <td>0.323334</td>\n","      <td>0.830340</td>\n","      <td>0.950820</td>\n","      <td>1.406042</td>\n","      <td>0.671217</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19998</th>\n","      <td>19998</td>\n","      <td>5.053256</td>\n","      <td>27.981613</td>\n","      <td>0.393574</td>\n","      <td>0.632766</td>\n","      <td>0.825990</td>\n","      <td>1.659363</td>\n","      <td>0.379448</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19999</th>\n","      <td>19999</td>\n","      <td>-0.558501</td>\n","      <td>6.557439</td>\n","      <td>0.346322</td>\n","      <td>0.878231</td>\n","      <td>0.882251</td>\n","      <td>1.616493</td>\n","      <td>0.738060</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>20000 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-16bb721a-c592-4ae1-b591-6fb3aaaefd11')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-16bb721a-c592-4ae1-b591-6fb3aaaefd11 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-16bb721a-c592-4ae1-b591-6fb3aaaefd11');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":65}]},{"cell_type":"markdown","source":["Nama-Nama kolom telah diubah, sehingga akan lebih mudah memahami makna data dan lebih mudah menafsirkan definisi setip data."],"metadata":{"id":"_bqVqm7gHpWT"}},{"cell_type":"code","source":["# Mengecek informasi dataset nya\n","data1.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Vi8ACFwRHw1u","executionInfo":{"status":"ok","timestamp":1655695381092,"user_tz":-480,"elapsed":333,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"5d2f011e-27ef-4cbc-adb8-2e8b097a021d"},"execution_count":66,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 20000 entries, 0 to 19999\n","Data columns (total 9 columns):\n"," #   Column      Non-Null Count  Dtype  \n","---  ------      --------------  -----  \n"," 0   Unnamed: 0  20000 non-null  int64  \n"," 1   TType       20000 non-null  float64\n"," 2   K           20000 non-null  float64\n"," 3   C           20000 non-null  float64\n"," 4   A           20000 non-null  float64\n"," 5   S           20000 non-null  float64\n"," 6   G2          20000 non-null  float64\n"," 7   H           20000 non-null  float64\n"," 8   target      20000 non-null  int64  \n","dtypes: float64(7), int64(2)\n","memory usage: 1.4 MB\n"]}]},{"cell_type":"markdown","source":["Berdasarkan perintah data.info() dari semua 8 kolom, terdapat 2 kolom bertipe integral atau numerik dan terdapat 6 kolom bertipe Float atau desimal."],"metadata":{"id":"N6coADWuH3V5"}},{"cell_type":"markdown","metadata":{"id":"axcdtmC3ceRo"},"source":["# 5 - Exploratory Data Analysis (EDA)"]},{"cell_type":"markdown","metadata":{"id":"gMpJTHsrceRp"},"source":["> Bagian ini berisi eksplorasi data pada dataset diatas dengan menggunakan query, grouping, visualisasi sederhana, dan lain sebagainya."]},{"cell_type":"markdown","source":["## Exploratory Data Analysis (EDA) Linear Regression"],"metadata":{"id":"bI5yIR51I5xr"}},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":385},"id":"CfCc7vIWceRp","executionInfo":{"status":"ok","timestamp":1655693340311,"user_tz":-480,"elapsed":939,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"89d44564-b251-4afe-9b14-c2e4ed098228"},"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Nilai Skewness biaya asuransi:  1.5158796580240388\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x360 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["# EDA yang akan saya tampilkan berupa visualisasi gambar\n","# Menampilkan Histogram and Scatter Plot\n","\n","# Visualisasi histogram \n","plt.figure(figsize=(15, 5)) \n","plt.subplot(1, 2, 1) \n","sns.histplot(data['biaya'], bins=30, kde=True) \n","plt.title('Histogram biaya asuransi')\n","print('\\nNilai Skewness biaya asuransi: ', data['biaya'].skew())"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":483},"id":"ayz6QtRHceRr","executionInfo":{"status":"ok","timestamp":1655693368842,"user_tz":-480,"elapsed":420,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"4d6ac3f7-2028-4247-c866-8b6ec4275f50"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fd490d1aa90>"]},"metadata":{},"execution_count":10},{"output_type":"display_data","data":{"text/plain":["<Figure size 576x576 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["data['jeniskelamin'].value_counts().plot(kind='pie', figsize=(8,8), autopct='%.2f')"]},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"-qoqoZWyceRt","executionInfo":{"status":"ok","timestamp":1655693373851,"user_tz":-480,"elapsed":399,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"0dc77d80-d0d7-4ff1-9a38-2ba28b288c93"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["              usia          bmi     children         biaya\n","count  1338.000000  1338.000000  1338.000000   1338.000000\n","mean     39.207025    30.663397     1.094918  13270.422265\n","std      14.049960     6.098187     1.205493  12110.011237\n","min      18.000000    15.960000     0.000000   1121.873900\n","25%      27.000000    26.296250     0.000000   4740.287150\n","50%      39.000000    30.400000     1.000000   9382.033000\n","75%      51.000000    34.693750     2.000000  16639.912515\n","max      64.000000    53.130000     5.000000  63770.428010"],"text/html":["\n","  <div id=\"df-e4056d29-b8c7-4a5f-9efc-52043b926231\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>usia</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>biaya</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1338.000000</td>\n","      <td>1338.000000</td>\n","      <td>1338.000000</td>\n","      <td>1338.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>39.207025</td>\n","      <td>30.663397</td>\n","      <td>1.094918</td>\n","      <td>13270.422265</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>14.049960</td>\n","      <td>6.098187</td>\n","      <td>1.205493</td>\n","      <td>12110.011237</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>18.000000</td>\n","      <td>15.960000</td>\n","      <td>0.000000</td>\n","      <td>1121.873900</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>27.000000</td>\n","      <td>26.296250</td>\n","      <td>0.000000</td>\n","      <td>4740.287150</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>39.000000</td>\n","      <td>30.400000</td>\n","      <td>1.000000</td>\n","      <td>9382.033000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>51.000000</td>\n","      <td>34.693750</td>\n","      <td>2.000000</td>\n","      <td>16639.912515</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>64.000000</td>\n","      <td>53.130000</td>\n","      <td>5.000000</td>\n","      <td>63770.428010</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e4056d29-b8c7-4a5f-9efc-52043b926231')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e4056d29-b8c7-4a5f-9efc-52043b926231 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e4056d29-b8c7-4a5f-9efc-52043b926231');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":11}],"source":["data.describe()"]},{"cell_type":"markdown","source":["## Exploratory Data Analysis (EDA) Logistic Regression"],"metadata":{"id":"rcX_F5JAJOvZ"}},{"cell_type":"code","source":["data1['target'].value_counts().plot(kind='bar')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"E65vVZlGJXL0","executionInfo":{"status":"ok","timestamp":1655695951721,"user_tz":-480,"elapsed":379,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"e5bb54d1-8a5e-4e16-df4c-2b2440ea159f"},"execution_count":72,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fd45295df50>"]},"metadata":{},"execution_count":72},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAYMAAAD1CAYAAACyaJl6AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAASHklEQVR4nO3dfZCdZXnH8e+vSWN9aU2QLcUkNGmJOsGpI66QjtOOSicJ6hj+UAf6QmozZqYGq60dBftHOiIz0DpSmSqdVFKDY4kptSWjaJpBLdOpvCyiSEBkG16yGTCrCdiWEQ1e/ePc1MO6m909Z7Mb2e9nZmef57rv55zrmcnkt8/LOU+qCknS/PZzc92AJGnuGQaSJMNAkmQYSJIwDCRJGAaSJGDhXDfQq5NPPrlWrFgx121I0s+UO+6447tVNTC2/jMbBitWrGBoaGiu25CknylJHhqv7mkiSZJhIEkyDCRJGAaSJAwDSRKGgSSJKYRBku1JDiW5e0z9XUm+lWRfkr/qql+SZDjJfUnWddXXt9pwkou76iuT3Nrqn0myaKZ2TpI0NVM5MvgksL67kOR1wAbgFVV1BvDhVl8NnA+c0bb5eJIFSRYAHwPOBVYDF7S5AFcAV1bV6cARYFO/OyVJmp5JP3RWVTcnWTGm/MfA5VX1ZJtzqNU3ADtb/YEkw8BZbWy4qvYDJNkJbEhyL/B64HfbnB3AXwJX97pDJ5oVF39+rlt41njw8jfOdQvSs1av1wxeAvxWO73z70le3epLgQNd80ZabaL6i4DHquromLokaRb1+nUUC4GTgDXAq4FdSX5txrqaQJLNwGaA00477Xi/nSTNG70eGYwAn62O24AfAycDB4HlXfOWtdpE9e8Bi5MsHFMfV1Vtq6rBqhocGPip71mSJPWo1zD4V+B1AEleAiwCvgvsBs5P8pwkK4FVwG3A7cCqdufQIjoXmXdXVQFfBt7SXncjcEOvOyNJ6s2kp4mSXAe8Fjg5yQiwFdgObG+3m/4Q2Nj+Y9+XZBdwD3AU2FJVT7XXuQjYAywAtlfVvvYW7wd2JvkQcCdwzQzunyRpCqZyN9EFEwz9/gTzLwMuG6d+I3DjOPX9/OSOI0nSHPATyJIkw0CSZBhIkjAMJEkYBpIkDANJEoaBJAnDQJKEYSBJwjCQJGEYSJIwDCRJGAaSJAwDSRKGgSQJw0CShGEgSWIKYZBke5JD7RGXY8fem6SSnNzWk+SqJMNJ7kpyZtfcjUnubz8bu+qvSvLNts1VSTJTOydJmpqpHBl8Elg/tphkObAWeLirfC6wqv1sBq5uc0+i8+zks+k84nJrkiVtm6uBd3Rt91PvJUk6viYNg6q6GTg8ztCVwPuA6qptAK6tjluAxUlOBdYBe6vqcFUdAfYC69vYL1XVLVVVwLXAef3tkiRpunq6ZpBkA3Cwqr4xZmgpcKBrfaTVjlUfGacuSZpFC6e7QZLnAR+gc4poViXZTOf0E6eddtpsv70kPWv1cmTw68BK4BtJHgSWAV9L8ivAQWB519xlrXas+rJx6uOqqm1VNVhVgwMDAz20Lkkaz7TDoKq+WVW/XFUrqmoFnVM7Z1bVo8Bu4MJ2V9Ea4PGqegTYA6xNsqRdOF4L7Glj30+ypt1FdCFwwwztmyRpiqZya+l1wFeBlyYZSbLpGNNvBPYDw8DfA+8EqKrDwKXA7e3ng61Gm/OJts1/AV/obVckSb2a9JpBVV0wyfiKruUCtkwwbzuwfZz6EPDyyfqQJB0/fgJZkmQYSJIMA0kShoEkCcNAkoRhIEnCMJAkYRhIkjAMJEkYBpIkDANJEoaBJAnDQJKEYSBJwjCQJGEYSJIwDCRJTO2xl9uTHEpyd1ftr5N8K8ldSf4lyeKusUuSDCe5L8m6rvr6VhtOcnFXfWWSW1v9M0kWzeQOSpImN5Ujg08C68fU9gIvr6rfAL4NXAKQZDVwPnBG2+bjSRYkWQB8DDgXWA1c0OYCXAFcWVWnA0eAYz1jWZJ0HEwaBlV1M3B4TO3fqupoW70FWNaWNwA7q+rJqnqAzkPuz2o/w1W1v6p+COwENiQJ8Hrg+rb9DuC8PvdJkjRNM3HN4I+AL7TlpcCBrrGRVpuo/iLgsa5gebo+riSbkwwlGRodHZ2B1iVJ0GcYJPkL4Cjw6Zlp59iqaltVDVbV4MDAwGy8pSTNCwt73TDJHwJvAs6pqmrlg8DyrmnLWo0J6t8DFidZ2I4OuudLkmZJT0cGSdYD7wPeXFVPdA3tBs5P8pwkK4FVwG3A7cCqdufQIjoXmXe3EPky8Ja2/Ubght52RZLUq6ncWnod8FXgpUlGkmwC/hb4RWBvkq8n+TuAqtoH7ALuAb4IbKmqp9pf/RcBe4B7gV1tLsD7gT9LMkznGsI1M7qHkqRJTXqaqKouGKc84X/YVXUZcNk49RuBG8ep76dzt5EkaY74CWRJkmEgSTIMJEkYBpIkDANJEoaBJAnDQJKEYSBJwjCQJGEYSJIwDCRJGAaSJAwDSRKGgSQJw0CShGEgSWJqTzrbnuRQkru7aicl2Zvk/vZ7SasnyVVJhpPcleTMrm02tvn3J9nYVX9Vkm+2ba5KkpneSUnSsU3lyOCTwPoxtYuBm6pqFXBTWwc4l85zj1cBm4GroRMewFbgbDpPNdv6dIC0Oe/o2m7se0mSjrNJw6CqbgYOjylvAHa05R3AeV31a6vjFmBxklOBdcDeqjpcVUeAvcD6NvZLVXVLVRVwbddrSZJmSa/XDE6pqkfa8qPAKW15KXCga95Iqx2rPjJOXZI0i/q+gNz+oq8Z6GVSSTYnGUoyNDo6OhtvKUnzQq9h8J12iof2+1CrHwSWd81b1mrHqi8bpz6uqtpWVYNVNTgwMNBj65KksXoNg93A03cEbQRu6Kpf2O4qWgM83k4n7QHWJlnSLhyvBfa0se8nWdPuIrqw67UkSbNk4WQTklwHvBY4OckInbuCLgd2JdkEPAS8rU2/EXgDMAw8AbwdoKoOJ7kUuL3N+2BVPX1R+p107lh6LvCF9iNJmkWThkFVXTDB0DnjzC1gywSvsx3YPk59CHj5ZH1Iko4fP4EsSTIMJEmGgSQJw0CShGEgScIwkCRhGEiSMAwkSRgGkiQMA0kShoEkCcNAkoRhIEnCMJAkYRhIkjAMJEkYBpIk+gyDJH+aZF+Su5Ncl+QXkqxMcmuS4SSfSbKozX1OWx9u4yu6XueSVr8vybr+dkmSNF09h0GSpcCfAINV9XJgAXA+cAVwZVWdDhwBNrVNNgFHWv3KNo8kq9t2ZwDrgY8nWdBrX5Kk6ev3NNFC4LlJFgLPAx4BXg9c38Z3AOe15Q1tnTZ+TpK0+s6qerKqHgCGgbP67EuSNA09h0FVHQQ+DDxMJwQeB+4AHquqo23aCLC0LS8FDrRtj7b5L+quj7ONJGkW9HOaaAmdv+pXAi8Gnk/nNM9xk2RzkqEkQ6Ojo8fzrSRpXunnNNHvAA9U1WhV/Qj4LPAaYHE7bQSwDDjYlg8CywHa+AuB73XXx9nmGapqW1UNVtXgwMBAH61Lkrr1EwYPA2uSPK+d+z8HuAf4MvCWNmcjcENb3t3WaeNfqqpq9fPb3UYrgVXAbX30JUmapoWTTxlfVd2a5Hrga8BR4E5gG/B5YGeSD7XaNW2Ta4BPJRkGDtO5g4iq2pdkF50gOQpsqaqneu1LkjR9PYcBQFVtBbaOKe9nnLuBquoHwFsneJ3LgMv66UWS1Ds/gSxJMgwkSYaBJAnDQJKEYSBJwjCQJGEYSJIwDCRJGAaSJAwDSRKGgSQJw0CShGEgScIwkCRhGEiSMAwkSRgGkiT6DIMki5Ncn+RbSe5N8ptJTkqyN8n97feSNjdJrkoynOSuJGd2vc7GNv/+JBsnfkdJ0vHQ75HBR4EvVtXLgFcA9wIXAzdV1SrgprYOcC6dh92vAjYDVwMkOYnOozPPpvO4zK1PB4gkaXb0HAZJXgj8Nu2B91X1w6p6DNgA7GjTdgDnteUNwLXVcQuwOMmpwDpgb1UdrqojwF5gfa99SZKmr58jg5XAKPAPSe5M8okkzwdOqapH2pxHgVPa8lLgQNf2I602Uf2nJNmcZCjJ0OjoaB+tS5K69RMGC4Ezgaur6pXA//KTU0IAVFUB1cd7PENVbauqwaoaHBgYmKmXlaR5r58wGAFGqurWtn49nXD4Tjv9Q/t9qI0fBJZ3bb+s1SaqS5JmSc9hUFWPAgeSvLSVzgHuAXYDT98RtBG4oS3vBi5sdxWtAR5vp5P2AGuTLGkXjte2miRplizsc/t3AZ9OsgjYD7ydTsDsSrIJeAh4W5t7I/AGYBh4os2lqg4nuRS4vc37YFUd7rMvSdI09BUGVfV1YHCcoXPGmVvAlgleZzuwvZ9eJEm98xPIkiTDQJJkGEiSMAwkSRgGkiQMA0kShoEkCcNAkoRhIEnCMJAkYRhIkjAMJEkYBpIkDANJEoaBJAnDQJLEDIRBkgVJ7kzyuba+MsmtSYaTfKY9BY0kz2nrw218RddrXNLq9yVZ129PkqTpmYkjg3cD93atXwFcWVWnA0eATa2+CTjS6le2eSRZDZwPnAGsBz6eZMEM9CVJmqK+wiDJMuCNwCfaeoDXA9e3KTuA89ryhrZOGz+nzd8A7KyqJ6vqATrPSD6rn74kSdPT75HB3wDvA37c1l8EPFZVR9v6CLC0LS8FDgC08cfb/P+vj7ONJGkW9BwGSd4EHKqqO2awn8nec3OSoSRDo6Ojs/W2kvSs18+RwWuANyd5ENhJ5/TQR4HFSRa2OcuAg235ILAcoI2/EPhed32cbZ6hqrZV1WBVDQ4MDPTRuiSp28LJp4yvqi4BLgFI8lrgz6vq95L8E/AWOgGxEbihbbK7rX+1jX+pqirJbuAfk3wEeDGwCrit174kTc2Kiz8/1y08qzx4+RvnuoW+9BwGx/B+YGeSDwF3Ate0+jXAp5IMA4fp3EFEVe1Lsgu4BzgKbKmqp45DX5KkCcxIGFTVV4CvtOX9jHM3UFX9AHjrBNtfBlw2E71IkqbPTyBLkgwDSZJhIEnCMJAkYRhIkjAMJEkYBpIkDANJEoaBJAnDQJKEYSBJwjCQJGEYSJIwDCRJGAaSJAwDSRKGgSSJPsIgyfIkX05yT5J9Sd7d6icl2Zvk/vZ7SasnyVVJhpPcleTMrtfa2Obfn2Rj/7slSZqOfo4MjgLvrarVwBpgS5LVwMXATVW1CriprQOcS+dh96uAzcDV0AkPYCtwNp3HZW59OkAkSbOj5zCoqkeq6mtt+b+Be4GlwAZgR5u2AzivLW8Arq2OW4DFSU4F1gF7q+pwVR0B9gLre+1LkjR9M3LNIMkK4JXArcApVfVIG3oUOKUtLwUOdG020moT1SVJs6TvMEjyAuCfgfdU1fe7x6qqgOr3Pbrea3OSoSRDo6OjM/WykjTv9RUGSX6eThB8uqo+28rfaad/aL8PtfpBYHnX5stabaL6T6mqbVU1WFWDAwMD/bQuSerSz91EAa4B7q2qj3QN7QaeviNoI3BDV/3CdlfRGuDxdjppD7A2yZJ24Xhtq0mSZsnCPrZ9DfAHwDeTfL3VPgBcDuxKsgl4CHhbG7sReAMwDDwBvB2gqg4nuRS4vc37YFUd7qMvSdI09RwGVfUfQCYYPmec+QVsmeC1tgPbe+1FktQfP4EsSTIMJEmGgSQJw0CShGEgScIwkCRhGEiSMAwkSRgGkiQMA0kShoEkCcNAkoRhIEnCMJAkYRhIkjAMJEkYBpIkTqAwSLI+yX1JhpNcPNf9SNJ8ckKEQZIFwMeAc4HVwAVJVs9tV5I0f5wQYQCcBQxX1f6q+iGwE9gwxz1J0ryxcK4baJYCB7rWR4Czx05KshnY3Fb/J8l9s9DbfHAy8N25bmIyuWKuO9Ac8d/nzPrV8YonShhMSVVtA7bNdR/PNkmGqmpwrvuQxuO/z9lxopwmOggs71pf1mqSpFlwooTB7cCqJCuTLALOB3bPcU+SNG+cEKeJqupokouAPcACYHtV7ZvjtuYTT73pROa/z1mQqprrHiRJc+xEOU0kSZpDhoEkyTCQJJ0gF5AlCSDJy+h8+8DSVjoI7K6qe+euq/nBIwM9Q5K3z3UPmp+SvJ/OV9EEuK39BLjOL688/rybSM+Q5OGqOm2u+9D8k+TbwBlV9aMx9UXAvqpaNTedzQ+eJpqHktw10RBwymz2InX5MfBi4KEx9VPbmI4jw2B+OgVYBxwZUw/wn7PfjgTAe4CbktzPT7648jTgdOCiOetqnjAM5qfPAS+oqq+PHUjyldlvR4Kq+mKSl9D5SvvuC8i3V9VTc9fZ/OA1A0mSdxNJkgwDSRKGgSQJw0CShGEgSQL+D2LeODzPCfjYAAAAAElFTkSuQmCC\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["data1.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":364},"id":"XsncwB88J74f","executionInfo":{"status":"ok","timestamp":1655695741257,"user_tz":-480,"elapsed":30,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"c64d656e-c7de-489b-faba-dc6156eae061"},"execution_count":70,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Unnamed: 0         TType             K             C             A  \\\n","count  20000.000000  20000.000000  20000.000000  20000.000000  20000.000000   \n","mean    9999.500000      0.395287     18.708788  -1846.175115      0.323992   \n","std     5773.647028      2.432726     26.185899   3880.385347     70.716614   \n","min        0.000000     -2.913205      1.471492  -9999.999999  -9999.999999   \n","25%     4999.750000     -1.952929      7.039827      0.292831      0.782718   \n","50%     9999.500000     -0.071197     11.781205      0.365902      0.859172   \n","75%    14999.250000      2.376115     20.920884      0.437227      0.905404   \n","max    19999.000000      7.773612   1035.467764      0.761184      0.986535   \n","\n","                  S            G2             H        target  \n","count  20000.000000  20000.000000  20000.000000  20000.000000  \n","mean      -3.220560      0.747130      0.655137      0.807200  \n","std      199.980672     70.720857      0.113237      0.394507  \n","min    -9999.999999  -9999.999999      0.017008      0.000000  \n","25%        0.757618      0.979765      0.585356      1.000000  \n","50%        0.844121      1.364905      0.659603      1.000000  \n","75%        0.889421      1.606039      0.743029      1.000000  \n","max        0.979032      1.953389      0.929947      1.000000  "],"text/html":["\n","  <div id=\"df-9a490ee1-8b77-4d71-a3a3-8f30e945fb91\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>TType</th>\n","      <th>K</th>\n","      <th>C</th>\n","      <th>A</th>\n","      <th>S</th>\n","      <th>G2</th>\n","      <th>H</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>20000.000000</td>\n","      <td>20000.000000</td>\n","      <td>20000.000000</td>\n","      <td>20000.000000</td>\n","      <td>20000.000000</td>\n","      <td>20000.000000</td>\n","      <td>20000.000000</td>\n","      <td>20000.000000</td>\n","      <td>20000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>9999.500000</td>\n","      <td>0.395287</td>\n","      <td>18.708788</td>\n","      <td>-1846.175115</td>\n","      <td>0.323992</td>\n","      <td>-3.220560</td>\n","      <td>0.747130</td>\n","      <td>0.655137</td>\n","      <td>0.807200</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>5773.647028</td>\n","      <td>2.432726</td>\n","      <td>26.185899</td>\n","      <td>3880.385347</td>\n","      <td>70.716614</td>\n","      <td>199.980672</td>\n","      <td>70.720857</td>\n","      <td>0.113237</td>\n","      <td>0.394507</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>-2.913205</td>\n","      <td>1.471492</td>\n","      <td>-9999.999999</td>\n","      <td>-9999.999999</td>\n","      <td>-9999.999999</td>\n","      <td>-9999.999999</td>\n","      <td>0.017008</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>4999.750000</td>\n","      <td>-1.952929</td>\n","      <td>7.039827</td>\n","      <td>0.292831</td>\n","      <td>0.782718</td>\n","      <td>0.757618</td>\n","      <td>0.979765</td>\n","      <td>0.585356</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>9999.500000</td>\n","      <td>-0.071197</td>\n","      <td>11.781205</td>\n","      <td>0.365902</td>\n","      <td>0.859172</td>\n","      <td>0.844121</td>\n","      <td>1.364905</td>\n","      <td>0.659603</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>14999.250000</td>\n","      <td>2.376115</td>\n","      <td>20.920884</td>\n","      <td>0.437227</td>\n","      <td>0.905404</td>\n","      <td>0.889421</td>\n","      <td>1.606039</td>\n","      <td>0.743029</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>19999.000000</td>\n","      <td>7.773612</td>\n","      <td>1035.467764</td>\n","      <td>0.761184</td>\n","      <td>0.986535</td>\n","      <td>0.979032</td>\n","      <td>1.953389</td>\n","      <td>0.929947</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9a490ee1-8b77-4d71-a3a3-8f30e945fb91')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9a490ee1-8b77-4d71-a3a3-8f30e945fb91 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9a490ee1-8b77-4d71-a3a3-8f30e945fb91');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":70}]},{"cell_type":"markdown","metadata":{"id":"cUuGmssgceRu"},"source":["# 6 - Data Preprocessing"]},{"cell_type":"markdown","source":["> Bagian ini berisi proses penyiapan data untuk proses pelatihan model, seperti pembagian data menjadi train-test-inference, transformasi data (normalisasi, encoding, dll.), dan proses-proses lain yang dibutuhkan."],"metadata":{"id":"6HrGTV-aLIqR"}},{"cell_type":"markdown","source":["## Data Preprocessing Linear Regression"],"metadata":{"id":"H5ygKix4K-WN"}},{"cell_type":"markdown","metadata":{"id":"cGPBe8qJceRv"},"source":["### a. - Data Inference\n"]},{"cell_type":"code","execution_count":12,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"KCov15gWceRv","executionInfo":{"status":"ok","timestamp":1655693408205,"user_tz":-480,"elapsed":397,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"7842ec53-8a5d-47ed-a918-41832f973539"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      usia jeniskelamin     bmi  children perokok    wilayah        biaya\n","1238    37         male  22.705         3      no  northeast   6985.50695\n","677     60         male  31.350         3     yes  northwest  46130.52650\n","908     63         male  39.800         3      no  southwest  15170.06900\n","465     30       female  28.380         1     yes  southeast  19521.96820\n","1129    19       female  18.600         0      no  southwest   1728.89700\n","1013    48         male  32.300         1      no  northwest   8765.24900\n","994     27       female  20.045         3     yes  northwest  16420.49455\n","107     26         male  30.875         2      no  northwest   3877.30425\n","1218    46       female  34.600         1     yes  southwest  41661.60200\n","924     43         male  23.200         0      no  southwest   6250.43500"],"text/html":["\n","  <div id=\"df-292d2ab4-8586-451c-9d3b-22f6ec8b1665\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>usia</th>\n","      <th>jeniskelamin</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>perokok</th>\n","      <th>wilayah</th>\n","      <th>biaya</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1238</th>\n","      <td>37</td>\n","      <td>male</td>\n","      <td>22.705</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>northeast</td>\n","      <td>6985.50695</td>\n","    </tr>\n","    <tr>\n","      <th>677</th>\n","      <td>60</td>\n","      <td>male</td>\n","      <td>31.350</td>\n","      <td>3</td>\n","      <td>yes</td>\n","      <td>northwest</td>\n","      <td>46130.52650</td>\n","    </tr>\n","    <tr>\n","      <th>908</th>\n","      <td>63</td>\n","      <td>male</td>\n","      <td>39.800</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>southwest</td>\n","      <td>15170.06900</td>\n","    </tr>\n","    <tr>\n","      <th>465</th>\n","      <td>30</td>\n","      <td>female</td>\n","      <td>28.380</td>\n","      <td>1</td>\n","      <td>yes</td>\n","      <td>southeast</td>\n","      <td>19521.96820</td>\n","    </tr>\n","    <tr>\n","      <th>1129</th>\n","      <td>19</td>\n","      <td>female</td>\n","      <td>18.600</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southwest</td>\n","      <td>1728.89700</td>\n","    </tr>\n","    <tr>\n","      <th>1013</th>\n","      <td>48</td>\n","      <td>male</td>\n","      <td>32.300</td>\n","      <td>1</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>8765.24900</td>\n","    </tr>\n","    <tr>\n","      <th>994</th>\n","      <td>27</td>\n","      <td>female</td>\n","      <td>20.045</td>\n","      <td>3</td>\n","      <td>yes</td>\n","      <td>northwest</td>\n","      <td>16420.49455</td>\n","    </tr>\n","    <tr>\n","      <th>107</th>\n","      <td>26</td>\n","      <td>male</td>\n","      <td>30.875</td>\n","      <td>2</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>3877.30425</td>\n","    </tr>\n","    <tr>\n","      <th>1218</th>\n","      <td>46</td>\n","      <td>female</td>\n","      <td>34.600</td>\n","      <td>1</td>\n","      <td>yes</td>\n","      <td>southwest</td>\n","      <td>41661.60200</td>\n","    </tr>\n","    <tr>\n","      <th>924</th>\n","      <td>43</td>\n","      <td>male</td>\n","      <td>23.200</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southwest</td>\n","      <td>6250.43500</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-292d2ab4-8586-451c-9d3b-22f6ec8b1665')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-292d2ab4-8586-451c-9d3b-22f6ec8b1665 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-292d2ab4-8586-451c-9d3b-22f6ec8b1665');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}],"source":["# Dapatkan Data untuk Inferensi Model\n","\n","datainfernce = data.sample(10, random_state=17)\n","datainfernce"]},{"cell_type":"markdown","metadata":{"id":"hNpgOR4fceRw"},"source":["Terdapat 10 data yang tidak tersedia di dalam dataset rideshare."]},{"cell_type":"code","execution_count":13,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"lhm7rpVZceRx","executionInfo":{"status":"ok","timestamp":1655693427521,"user_tz":-480,"elapsed":422,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"ac27cbcc-bd6c-40a4-d786-201507428c94"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      usia jeniskelamin     bmi  children perokok    wilayah        biaya\n","0       19       female  27.900         0     yes  southwest  16884.92400\n","1       18         male  33.770         1      no  southeast   1725.55230\n","2       28         male  33.000         3      no  southeast   4449.46200\n","3       33         male  22.705         0      no  northwest  21984.47061\n","4       32         male  28.880         0      no  northwest   3866.85520\n","...    ...          ...     ...       ...     ...        ...          ...\n","1333    50         male  30.970         3      no  northwest  10600.54830\n","1334    18       female  31.920         0      no  northeast   2205.98080\n","1335    18       female  36.850         0      no  southeast   1629.83350\n","1336    21       female  25.800         0      no  southwest   2007.94500\n","1337    61       female  29.070         0     yes  northwest  29141.36030\n","\n","[1328 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-27412d5c-0df5-470d-8339-fceb68e2e4f3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>usia</th>\n","      <th>jeniskelamin</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>perokok</th>\n","      <th>wilayah</th>\n","      <th>biaya</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19</td>\n","      <td>female</td>\n","      <td>27.900</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>southwest</td>\n","      <td>16884.92400</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>18</td>\n","      <td>male</td>\n","      <td>33.770</td>\n","      <td>1</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1725.55230</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>male</td>\n","      <td>33.000</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>4449.46200</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>male</td>\n","      <td>22.705</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>21984.47061</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32</td>\n","      <td>male</td>\n","      <td>28.880</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>3866.85520</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1333</th>\n","      <td>50</td>\n","      <td>male</td>\n","      <td>30.970</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>10600.54830</td>\n","    </tr>\n","    <tr>\n","      <th>1334</th>\n","      <td>18</td>\n","      <td>female</td>\n","      <td>31.920</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northeast</td>\n","      <td>2205.98080</td>\n","    </tr>\n","    <tr>\n","      <th>1335</th>\n","      <td>18</td>\n","      <td>female</td>\n","      <td>36.850</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1629.83350</td>\n","    </tr>\n","    <tr>\n","      <th>1336</th>\n","      <td>21</td>\n","      <td>female</td>\n","      <td>25.800</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southwest</td>\n","      <td>2007.94500</td>\n","    </tr>\n","    <tr>\n","      <th>1337</th>\n","      <td>61</td>\n","      <td>female</td>\n","      <td>29.070</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>northwest</td>\n","      <td>29141.36030</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1328 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-27412d5c-0df5-470d-8339-fceb68e2e4f3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-27412d5c-0df5-470d-8339-fceb68e2e4f3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-27412d5c-0df5-470d-8339-fceb68e2e4f3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":13}],"source":["# Hapus Kumpulan Inferensi dari Kumpulan Data\n","\n","data_train_test = data.drop(datainfernce.index)\n","data_train_test"]},{"cell_type":"markdown","metadata":{"id":"9gommlLIceRy"},"source":["Dataset awal insurance memiliki 1338 baris kemudian hilangkan kumpulan data inference dari insurance menjadi 1328, berkurang 10 data. "]},{"cell_type":"markdown","metadata":{"id":"e-BJqB22ceRz"},"source":["### b. - Splitting Dataset\n"]},{"cell_type":"code","execution_count":16,"metadata":{"id":"fZiuJOGPceRz","executionInfo":{"status":"ok","timestamp":1655693542859,"user_tz":-480,"elapsed":344,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}}},"outputs":[],"source":["# Pemisahan `X` (Fitur) dan `y` (Target)\n","\n","X = data_train_test.drop('biaya', axis=1) #menghapus kolom axis=1 harga, untuk dimasukkan dan dibagi menjadi train/test\n","y = data_train_test['biaya']"]},{"cell_type":"markdown","metadata":{"id":"L-p9GBMyceRz"},"source":["Drop kolom harga untuk 80% masuk ke x dan 20% masuk ke y, untuk splitting data di gunakan train_test_split"]},{"cell_type":"code","execution_count":17,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YgJ7aK-7ceR0","executionInfo":{"status":"ok","timestamp":1655693573312,"user_tz":-480,"elapsed":367,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"b2593ee5-65d5-4f33-9a79-915e0d51d0d8"},"outputs":[{"output_type":"stream","name":"stdout","text":["Train Size :  (1062, 6)\n","Test Size :  (266, 6)\n"]}],"source":["# Train-Set and Test-Set\n","# Memasukkan nilai x dan y, test_size artinya split 80% untuk train, dan 20% untuk test\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=10)\n","print('Train Size : ', X_train.shape)\n","print('Test Size : ', X_test.shape)"]},{"cell_type":"markdown","metadata":{"id":"W5Evh-UyceR0"},"source":["Setelah dilakukan pemisahan training set dan testing set, diperoleh ukuran train sebesar 1062 baris dan 6 kolom, serta ukuran test sebesar 266 baris dan 6 kolom."]},{"cell_type":"markdown","metadata":{"id":"NGPRc0RjceR1"},"source":["### c. - Feature Selection\n"]},{"cell_type":"code","source":["plt.figure(figsize=(10,8))\n","sns.heatmap(data.corr(), annot=True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":487},"id":"Q1PJSLFe0-hG","executionInfo":{"status":"ok","timestamp":1655693631310,"user_tz":-480,"elapsed":1135,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"166b90ba-f62c-4ebc-824c-6229edcbbc00"},"execution_count":20,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x576 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["Berdasarkan Feature selection maka saya hanya akan menggunakan kolom numerik Usia dan bmi."],"metadata":{"id":"mYIM355zCI17"}},{"cell_type":"markdown","metadata":{"id":"tqkRoskdceR1"},"source":["### d - Handling Missing Values"]},{"cell_type":"code","execution_count":21,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ql0zDO02ceR1","executionInfo":{"status":"ok","timestamp":1655693723925,"user_tz":-480,"elapsed":357,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"2bda44de-e484-487a-b6e6-e5e30d14dd2a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["usia            0\n","jeniskelamin    0\n","bmi             0\n","children        0\n","perokok         0\n","wilayah         0\n","dtype: int64"]},"metadata":{},"execution_count":21}],"source":["# Mengecek Missing Values on X_train\n","X_train.isnull().sum()"]},{"cell_type":"code","execution_count":22,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4L-uL0doceR2","executionInfo":{"status":"ok","timestamp":1655693727496,"user_tz":-480,"elapsed":346,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"71edac2c-79ab-41f6-ecfa-f4728bec292f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["usia            0\n","jeniskelamin    0\n","bmi             0\n","children        0\n","perokok         0\n","wilayah         0\n","dtype: int64"]},"metadata":{},"execution_count":22}],"source":["# Mengecek Missing Values on X_test\n","\n","X_test.isnull().sum()"]},{"cell_type":"code","execution_count":23,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2iLFOWjbceR2","executionInfo":{"status":"ok","timestamp":1655693733460,"user_tz":-480,"elapsed":358,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"c39e726d-4064-4d79-d7cc-89a272175be3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":23}],"source":["# Mengecek Missing Values on y_train\n","y_train.isnull().sum()"]},{"cell_type":"code","execution_count":24,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G4KmnMN6ceR3","executionInfo":{"status":"ok","timestamp":1655693739619,"user_tz":-480,"elapsed":333,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"a5b5af46-1eba-40cc-e49a-4d539ed69d4d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":24}],"source":["# Mengecek Missing Values on y_test\n","\n","y_test.isnull().sum()"]},{"cell_type":"markdown","metadata":{"id":"pLce69z2ceSA"},"source":["Setelah di lakukan proses handling missing value maka variabel X_train, X_test, y_train dan y_test sudah bersih dari Nan data. Selanjutnya akan dilakukan handling outlier."]},{"cell_type":"markdown","metadata":{"id":"0eMsy6WCceSA"},"source":["### e - Handling Outlier"]},{"cell_type":"code","execution_count":25,"metadata":{"id":"yBiDW6YtceSC","executionInfo":{"status":"ok","timestamp":1655693792812,"user_tz":-480,"elapsed":346,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}}},"outputs":[],"source":["# Berfungsi untuk membuat histogram dan boxplot.\n","# Fungsi ini menggunakan kerangka data (df) dan variabel yang diinginkan sebagai argumen.\n","\n","def diagnostic_plots(data, variable):\n","    # Define figure size\n","    plt.figure(figsize=(16, 4))\n","\n","    # Histogram\n","    plt.subplot(1, 2, 1)\n","    sns.histplot(data[variable], bins=30)\n","    plt.title('Histogram')\n","\n","    # Boxplot\n","    plt.subplot(1, 2, 2)\n","    sns.boxplot(y=data[variable])\n","    plt.title('Boxplot')\n","\n","    plt.show()"]},{"cell_type":"code","execution_count":26,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":641},"id":"RIpl1WdtceSC","executionInfo":{"status":"ok","timestamp":1655693837618,"user_tz":-480,"elapsed":1854,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"b55f6a67-c03a-4896-c198-286a343097fa"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["\n","Skewness Value usia:  0.054136100999206106\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["\n","Skewness Value bmi:  0.3215591245911536\n"]}],"source":["diagnostic_plots(X_train, 'usia')\n","print('\\nSkewness Value usia: ', X_train['usia'].skew())\n","\n","diagnostic_plots(X_train, 'bmi')\n","print('\\nSkewness Value bmi: ', X_train['bmi'].skew())\n"]},{"cell_type":"markdown","metadata":{"id":"1c_fTZ3TceSE"},"source":["Dikatakan berdistribusi normal ketika nilai rasio skewness berada pada rentang nilai -2 sampai 2. Berdasarkan visualisasi distribusi normal bahwa nilai skewness usia sebesar 0.05 yang bearti normal. Sedangkan visualisasi distribusi normal bahwa nilai skewness bmi sebesar 0.3 yang bearti normal. Tetapi untuk Boxplot pengecekan oulier tidak ada pada variabel usia, sedangkan bmi terdapat outlier. Oleh karena itu akan dilakukan handling oulier variabel bmi menggunakan metode capping."]},{"cell_type":"markdown","metadata":{"id":"t0e3LPRnceSE"},"source":["--- MENGATASI OUTLIER"]},{"cell_type":"code","execution_count":27,"metadata":{"id":"Y1hRpz9HceSE","executionInfo":{"status":"ok","timestamp":1655694038590,"user_tz":-480,"elapsed":331,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}}},"outputs":[],"source":["# Menghitung/menentukan nilai IQR untuk data numerik\n","X_train_ = Winsorizer(capping_method='iqr', \n","                          tail='both', \n","                          fold=1.5,\n","                          variables=['bmi'])\n","\n","X_train_.fit(X_train)\n","\n","X_train_clear = X_train_.transform(X_train) "]},{"cell_type":"code","execution_count":28,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IPC6qHv7ceSF","executionInfo":{"status":"ok","timestamp":1655694043178,"user_tz":-480,"elapsed":10,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"a48cb1f9-44e3-4551-822b-28add3e01346"},"outputs":[{"output_type":"stream","name":"stdout","text":["Left Tail Caps  :  {'bmi': 13.296875}\n","           \n","Right Tail Caps :  {'bmi': 47.541875000000005}\n"]}],"source":["# Pemeriksaan data outlier\n","# Periksa batas minimum untuk setiap variabel\n","print('Left Tail Caps  : ', X_train_.left_tail_caps_)\n","print('           ')\n","# Periksa batas maksimum untuk setiap variabel\n","print('Right Tail Caps : ', X_train_.right_tail_caps_)"]},{"cell_type":"code","execution_count":29,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"SDvwbX0iceSF","executionInfo":{"status":"ok","timestamp":1655694048573,"user_tz":-480,"elapsed":383,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"1b49a4e2-009a-451c-a0ae-62e453db6164"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      usia jeniskelamin     bmi  children perokok    wilayah\n","231     59       female  27.830         3      no  southeast\n","920     62       female  25.000         0      no  southwest\n","509     57       female  28.700         0      no  southwest\n","152     32       female  37.145         3      no  northeast\n","1089    56         male  22.100         0      no  southwest\n","...    ...          ...     ...       ...     ...        ...\n","1188    43       female  25.270         1     yes  northeast\n","1155    36       female  22.135         3      no  northeast\n","529     18         male  25.460         0      no  northeast\n","1157    23       female  23.180         2      no  northwest\n","1299    19       female  25.745         1      no  northwest\n","\n","[1062 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-3207a411-5a11-488e-86c4-8a0f6efbfc63\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>usia</th>\n","      <th>jeniskelamin</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>perokok</th>\n","      <th>wilayah</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>231</th>\n","      <td>59</td>\n","      <td>female</td>\n","      <td>27.830</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","    </tr>\n","    <tr>\n","      <th>920</th>\n","      <td>62</td>\n","      <td>female</td>\n","      <td>25.000</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southwest</td>\n","    </tr>\n","    <tr>\n","      <th>509</th>\n","      <td>57</td>\n","      <td>female</td>\n","      <td>28.700</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southwest</td>\n","    </tr>\n","    <tr>\n","      <th>152</th>\n","      <td>32</td>\n","      <td>female</td>\n","      <td>37.145</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>northeast</td>\n","    </tr>\n","    <tr>\n","      <th>1089</th>\n","      <td>56</td>\n","      <td>male</td>\n","      <td>22.100</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southwest</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1188</th>\n","      <td>43</td>\n","      <td>female</td>\n","      <td>25.270</td>\n","      <td>1</td>\n","      <td>yes</td>\n","      <td>northeast</td>\n","    </tr>\n","    <tr>\n","      <th>1155</th>\n","      <td>36</td>\n","      <td>female</td>\n","      <td>22.135</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>northeast</td>\n","    </tr>\n","    <tr>\n","      <th>529</th>\n","      <td>18</td>\n","      <td>male</td>\n","      <td>25.460</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northeast</td>\n","    </tr>\n","    <tr>\n","      <th>1157</th>\n","      <td>23</td>\n","      <td>female</td>\n","      <td>23.180</td>\n","      <td>2</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","    </tr>\n","    <tr>\n","      <th>1299</th>\n","      <td>19</td>\n","      <td>female</td>\n","      <td>25.745</td>\n","      <td>1</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1062 rows × 6 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3207a411-5a11-488e-86c4-8a0f6efbfc63')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3207a411-5a11-488e-86c4-8a0f6efbfc63 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3207a411-5a11-488e-86c4-8a0f6efbfc63');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":29}],"source":["# DIPEROLEH X_train YANG SUDAH DI LAKUKAN DATA CLEANING/FEATURE ENGINEERING\n","# Variabel X_train_clear sudah bersih dari Missing Value dan Outlier\n","X_train_clear"]},{"cell_type":"markdown","metadata":{"id":"tYa7KVcrceSG"},"source":["Sehingga di peroleh variabel X_train_clear yang bersih dari missing value dan outlier. Untuk variabel X_test sudah besih dari missing value dan oulier nya tidka perlu dilakukan."]},{"cell_type":"markdown","metadata":{"id":"EPxEG3KRceSI"},"source":["### f - Memisahkan Antara Kolom Numerik dan Kolom Kategorik"]},{"cell_type":"code","source":["# Menggunakan variabel yang terdapat korelasi untuk kolom numerik\n","X_train_Clear=X_train_clear[['usia','bmi']]\n","X_test_Clear= X_test[['usia','bmi']]\n","X_train_Clear"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"NP4eNWHd21GG","executionInfo":{"status":"ok","timestamp":1655694094469,"user_tz":-480,"elapsed":404,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"73c5e60e-8ea7-40c1-a725-8230a1beb2f5"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      usia     bmi\n","231     59  27.830\n","920     62  25.000\n","509     57  28.700\n","152     32  37.145\n","1089    56  22.100\n","...    ...     ...\n","1188    43  25.270\n","1155    36  22.135\n","529     18  25.460\n","1157    23  23.180\n","1299    19  25.745\n","\n","[1062 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-2faf2f0a-8a18-45ad-9e79-3b1ff5fa324a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>usia</th>\n","      <th>bmi</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>231</th>\n","      <td>59</td>\n","      <td>27.830</td>\n","    </tr>\n","    <tr>\n","      <th>920</th>\n","      <td>62</td>\n","      <td>25.000</td>\n","    </tr>\n","    <tr>\n","      <th>509</th>\n","      <td>57</td>\n","      <td>28.700</td>\n","    </tr>\n","    <tr>\n","      <th>152</th>\n","      <td>32</td>\n","      <td>37.145</td>\n","    </tr>\n","    <tr>\n","      <th>1089</th>\n","      <td>56</td>\n","      <td>22.100</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1188</th>\n","      <td>43</td>\n","      <td>25.270</td>\n","    </tr>\n","    <tr>\n","      <th>1155</th>\n","      <td>36</td>\n","      <td>22.135</td>\n","    </tr>\n","    <tr>\n","      <th>529</th>\n","      <td>18</td>\n","      <td>25.460</td>\n","    </tr>\n","    <tr>\n","      <th>1157</th>\n","      <td>23</td>\n","      <td>23.180</td>\n","    </tr>\n","    <tr>\n","      <th>1299</th>\n","      <td>19</td>\n","      <td>25.745</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1062 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2faf2f0a-8a18-45ad-9e79-3b1ff5fa324a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2faf2f0a-8a18-45ad-9e79-3b1ff5fa324a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2faf2f0a-8a18-45ad-9e79-3b1ff5fa324a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":30}]},{"cell_type":"code","execution_count":31,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ggIFEFiNceSJ","executionInfo":{"status":"ok","timestamp":1655694099361,"user_tz":-480,"elapsed":519,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"ddb2dbf6-02ad-411e-fe0e-ffb5ad337022"},"outputs":[{"output_type":"stream","name":"stdout","text":["Kolom Numerik dari dataset rideshare :  ['usia', 'bmi']\n","------------------------------------------------------------------------------------------------\n","Kolom Kategorik dari dataset rideshare :  ['jeniskelamin', 'perokok', 'wilayah']\n"]}],"source":["# Dapatkan Variabel Baru Kolom Numerik dan Kolom Kategorik\n","\n","KolomNumerik = X_train_Clear.select_dtypes(include=np.number).columns.tolist()\n","KolomKategorik = X_train_clear.select_dtypes(include=['object']).columns.tolist()\n","\n","print('Kolom Numerik dari dataset rideshare : ', KolomNumerik)\n","print('------------------------------------------------------------------------------------------------')\n","print('Kolom Kategorik dari dataset rideshare : ', KolomKategorik)"]},{"cell_type":"markdown","metadata":{"id":"e5YE_41fceSJ"},"source":["untuk melihat kolom yang numerik dan melihat kolom yang kategorik. jadi memisahkan antara numerical dan kategorikal."]},{"cell_type":"code","execution_count":32,"metadata":{"id":"e7Pt-vWPceSJ","executionInfo":{"status":"ok","timestamp":1655694119217,"user_tz":-480,"elapsed":359,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}}},"outputs":[],"source":["# buat variabel x_train untuk numerik/kategorik dan buat variabel x_train untuk numerik/kategorik\n","\n","X_train_num = X_train_Clear[KolomNumerik]\n","X_train_cat = X_train_clear[KolomKategorik]\n","\n","X_test_num = X_test[KolomNumerik]\n","X_test_cat = X_test[KolomKategorik]"]},{"cell_type":"markdown","metadata":{"id":"LGOiHv1UceSK"},"source":["### g - Feature Scaling"]},{"cell_type":"code","execution_count":33,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"rFA1TqD_ceSK","executionInfo":{"status":"ok","timestamp":1655694122816,"user_tz":-480,"elapsed":382,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"5f472b1f-2110-4b07-e750-44f90afaf4fb"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      usia     bmi\n","231     59  27.830\n","920     62  25.000\n","509     57  28.700\n","152     32  37.145\n","1089    56  22.100\n","...    ...     ...\n","1188    43  25.270\n","1155    36  22.135\n","529     18  25.460\n","1157    23  23.180\n","1299    19  25.745\n","\n","[1062 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-e4753cff-d12d-4257-9ebc-044f1ca19dc6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>usia</th>\n","      <th>bmi</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>231</th>\n","      <td>59</td>\n","      <td>27.830</td>\n","    </tr>\n","    <tr>\n","      <th>920</th>\n","      <td>62</td>\n","      <td>25.000</td>\n","    </tr>\n","    <tr>\n","      <th>509</th>\n","      <td>57</td>\n","      <td>28.700</td>\n","    </tr>\n","    <tr>\n","      <th>152</th>\n","      <td>32</td>\n","      <td>37.145</td>\n","    </tr>\n","    <tr>\n","      <th>1089</th>\n","      <td>56</td>\n","      <td>22.100</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1188</th>\n","      <td>43</td>\n","      <td>25.270</td>\n","    </tr>\n","    <tr>\n","      <th>1155</th>\n","      <td>36</td>\n","      <td>22.135</td>\n","    </tr>\n","    <tr>\n","      <th>529</th>\n","      <td>18</td>\n","      <td>25.460</td>\n","    </tr>\n","    <tr>\n","      <th>1157</th>\n","      <td>23</td>\n","      <td>23.180</td>\n","    </tr>\n","    <tr>\n","      <th>1299</th>\n","      <td>19</td>\n","      <td>25.745</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1062 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e4753cff-d12d-4257-9ebc-044f1ca19dc6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e4753cff-d12d-4257-9ebc-044f1ca19dc6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e4753cff-d12d-4257-9ebc-044f1ca19dc6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":33}],"source":["# Menampilkan X_train_num \n","X_train_num "]},{"cell_type":"code","execution_count":34,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"tZNnxYvvceSL","executionInfo":{"status":"ok","timestamp":1655694128555,"user_tz":-480,"elapsed":447,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"7a31a311-df12-41b9-9212-a9c78fdc2a97"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      usia     bmi\n","1178    23  34.865\n","1147    20  31.920\n","300     36  27.550\n","754     24  33.630\n","1283    18  30.030\n","...    ...     ...\n","925     50  32.110\n","798     58  33.100\n","22      18  34.100\n","306     28  27.500\n","685     53  26.410\n","\n","[266 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-fce267e4-8144-4c4c-a61a-aab7fdea0e3b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>usia</th>\n","      <th>bmi</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1178</th>\n","      <td>23</td>\n","      <td>34.865</td>\n","    </tr>\n","    <tr>\n","      <th>1147</th>\n","      <td>20</td>\n","      <td>31.920</td>\n","    </tr>\n","    <tr>\n","      <th>300</th>\n","      <td>36</td>\n","      <td>27.550</td>\n","    </tr>\n","    <tr>\n","      <th>754</th>\n","      <td>24</td>\n","      <td>33.630</td>\n","    </tr>\n","    <tr>\n","      <th>1283</th>\n","      <td>18</td>\n","      <td>30.030</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>925</th>\n","      <td>50</td>\n","      <td>32.110</td>\n","    </tr>\n","    <tr>\n","      <th>798</th>\n","      <td>58</td>\n","      <td>33.100</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>18</td>\n","      <td>34.100</td>\n","    </tr>\n","    <tr>\n","      <th>306</th>\n","      <td>28</td>\n","      <td>27.500</td>\n","    </tr>\n","    <tr>\n","      <th>685</th>\n","      <td>53</td>\n","      <td>26.410</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>266 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fce267e4-8144-4c4c-a61a-aab7fdea0e3b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fce267e4-8144-4c4c-a61a-aab7fdea0e3b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fce267e4-8144-4c4c-a61a-aab7fdea0e3b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":34}],"source":["X_test_num"]},{"cell_type":"markdown","metadata":{"id":"zknKuurFceSL"},"source":["x_train_num harus di scaling , agar tidak melihat data kolom dengan nilai paling besar saja. semua besaran indeks dari puluhan, ratusan dan jutaanya menjadi setara."]},{"cell_type":"code","execution_count":35,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3W7A2llTceSL","executionInfo":{"status":"ok","timestamp":1655694136750,"user_tz":-480,"elapsed":439,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"368115d7-f3af-4974-e939-1789668f44de"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.89130435, 0.35848097],\n","       [0.95652174, 0.26637919],\n","       [0.84782609, 0.38679495],\n","       ...,\n","       [0.        , 0.2813498 ],\n","       [0.10869565, 0.20714765],\n","       [0.02173913, 0.29062506]])"]},"metadata":{},"execution_count":35}],"source":["# Feature Scaling using MinMaxScaler\n","\n","scaler = MinMaxScaler() # Nilainya di ubah skalanya menjadi 0 sampai 1\n","scaler.fit(X_train_num) # .fit itu proses tranning untuk mencari kolom yang akan di ubah scaler nya, .fit hanya di gunakan untuk X_train dan tidak untuk X_test\n","# fit itu proses pencarian batas 0 dan batas 1 \n","\n","X_train_num_scaled = scaler.transform(X_train_num) #setelah di lakukan scaler baru di transform/mengubah nilainya menjadi 0 sampai 1\n","X_test_num_scaled = scaler.transform(X_test_num)\n","X_train_num_scaled"]},{"cell_type":"markdown","metadata":{"id":"FIJ2CgxQceSN"},"source":["### h - Feature Encoding"]},{"cell_type":"code","execution_count":36,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"0d7kg-ymceSO","executionInfo":{"status":"ok","timestamp":1655694142512,"user_tz":-480,"elapsed":383,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"87be4d16-4453-4fe5-c4f3-53f71f9f8224"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["     jeniskelamin perokok    wilayah\n","231        female      no  southeast\n","920        female      no  southwest\n","509        female      no  southwest\n","152        female      no  northeast\n","1089         male      no  southwest\n","...           ...     ...        ...\n","1188       female     yes  northeast\n","1155       female      no  northeast\n","529          male      no  northeast\n","1157       female      no  northwest\n","1299       female      no  northwest\n","\n","[1062 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-133fa478-8750-4ee8-9fa6-36ceb2168927\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>jeniskelamin</th>\n","      <th>perokok</th>\n","      <th>wilayah</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>231</th>\n","      <td>female</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","    </tr>\n","    <tr>\n","      <th>920</th>\n","      <td>female</td>\n","      <td>no</td>\n","      <td>southwest</td>\n","    </tr>\n","    <tr>\n","      <th>509</th>\n","      <td>female</td>\n","      <td>no</td>\n","      <td>southwest</td>\n","    </tr>\n","    <tr>\n","      <th>152</th>\n","      <td>female</td>\n","      <td>no</td>\n","      <td>northeast</td>\n","    </tr>\n","    <tr>\n","      <th>1089</th>\n","      <td>male</td>\n","      <td>no</td>\n","      <td>southwest</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1188</th>\n","      <td>female</td>\n","      <td>yes</td>\n","      <td>northeast</td>\n","    </tr>\n","    <tr>\n","      <th>1155</th>\n","      <td>female</td>\n","      <td>no</td>\n","      <td>northeast</td>\n","    </tr>\n","    <tr>\n","      <th>529</th>\n","      <td>male</td>\n","      <td>no</td>\n","      <td>northeast</td>\n","    </tr>\n","    <tr>\n","      <th>1157</th>\n","      <td>female</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","    </tr>\n","    <tr>\n","      <th>1299</th>\n","      <td>female</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1062 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-133fa478-8750-4ee8-9fa6-36ceb2168927')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-133fa478-8750-4ee8-9fa6-36ceb2168927 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-133fa478-8750-4ee8-9fa6-36ceb2168927');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":36}],"source":["# Menampilkan X_train_cat \n","X_train_cat"]},{"cell_type":"code","execution_count":37,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"7w9GkW_YceSO","executionInfo":{"status":"ok","timestamp":1655694148225,"user_tz":-480,"elapsed":414,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"c1c90e91-f107-48d3-8c33-0c17be74c1a1"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["     jeniskelamin perokok    wilayah\n","1178       female      no  northeast\n","1147       female      no  northwest\n","300          male      no  northeast\n","754          male      no  northeast\n","1283         male      no  southeast\n","...           ...     ...        ...\n","925          male      no  northeast\n","798        female      no  southwest\n","22           male      no  southeast\n","306        female      no  southwest\n","685          male      no  northeast\n","\n","[266 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-a6399ae1-d3c2-4992-9694-ce1c41715346\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>jeniskelamin</th>\n","      <th>perokok</th>\n","      <th>wilayah</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1178</th>\n","      <td>female</td>\n","      <td>no</td>\n","      <td>northeast</td>\n","    </tr>\n","    <tr>\n","      <th>1147</th>\n","      <td>female</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","    </tr>\n","    <tr>\n","      <th>300</th>\n","      <td>male</td>\n","      <td>no</td>\n","      <td>northeast</td>\n","    </tr>\n","    <tr>\n","      <th>754</th>\n","      <td>male</td>\n","      <td>no</td>\n","      <td>northeast</td>\n","    </tr>\n","    <tr>\n","      <th>1283</th>\n","      <td>male</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>925</th>\n","      <td>male</td>\n","      <td>no</td>\n","      <td>northeast</td>\n","    </tr>\n","    <tr>\n","      <th>798</th>\n","      <td>female</td>\n","      <td>no</td>\n","      <td>southwest</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>male</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","    </tr>\n","    <tr>\n","      <th>306</th>\n","      <td>female</td>\n","      <td>no</td>\n","      <td>southwest</td>\n","    </tr>\n","    <tr>\n","      <th>685</th>\n","      <td>male</td>\n","      <td>no</td>\n","      <td>northeast</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>266 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a6399ae1-d3c2-4992-9694-ce1c41715346')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a6399ae1-d3c2-4992-9694-ce1c41715346 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a6399ae1-d3c2-4992-9694-ce1c41715346');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":37}],"source":["# Menampilkan X_test_cat \n","X_test_cat"]},{"cell_type":"code","execution_count":38,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g1aBin3UceSP","executionInfo":{"status":"ok","timestamp":1655694302007,"user_tz":-480,"elapsed":336,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"c620e22f-4ddb-4633-cd91-24af7231fde1"},"outputs":[{"output_type":"stream","name":"stdout","text":["---------------------------------- KATEGORIK X_TRAIN ------------------------------------\n","Number of categories in the variable jenis kelamin  : 2\n","Number of categories in the variable perokok        : 2\n","Number of categories in the variable wilayah        : 4\n","             \n","---------------------------------- KATEGORIK X_TEST ------------------------------------\n","Number of categories in the variable jenis kelamin  : 2\n","Number of categories in the variable perokok        : 2\n","Number of categories in the variable wilayah        : 4\n"]}],"source":["# Mari kita periksa kardinalitas, ini adalah jumlah label yang berbeda, untuk variabel kategori yang berbeda\n","print('---------------------------------- KATEGORIK X_TRAIN ------------------------------------')\n","print('Number of categories in the variable jenis kelamin  : {}'.format(len(X_train_cat.jeniskelamin.unique())))\n","print('Number of categories in the variable perokok        : {}'.format(len(X_train_cat.perokok.unique())))\n","print('Number of categories in the variable wilayah        : {}'.format(len(X_train_cat.wilayah.unique())))\n","print('             ')\n","print('---------------------------------- KATEGORIK X_TEST ------------------------------------')\n","# Mari kita periksa kardinalitas, ini adalah jumlah label yang berbeda, untuk variabel kategori yang berbeda\n","print('Number of categories in the variable jenis kelamin  : {}'.format(len(X_test_cat.jeniskelamin.unique())))\n","print('Number of categories in the variable perokok        : {}'.format(len(X_test_cat.perokok.unique())))\n","print('Number of categories in the variable wilayah        : {}'.format(len(X_test_cat.wilayah.unique())))"]},{"cell_type":"markdown","metadata":{"id":"aLPEFRk9ceSQ"},"source":["Berdasarkan personal judgment saya, bahwa biaya asuransi lebih di pengaruhi oleh jenis kelamnin dan perokok, tidak untuk wilayah.\n","1. Jenis kelamin bisa mempengaruhi biaya asuransi, biasanya jenis kelamin perempuan lebih tinggi biayanya jika menggunakan asuransi untuk proses persalinan. sedangkan laki-laki biaya asuransinya tinggi tergantung jenis perkerjaan termasuk berbahaya atau tidak.\n","2. Perokok bisa mempengaruhi biaya asuransi, peluang untuk mengidap sakit lebih besar dari pada perokok pasih sehingga biaya asuransi bisa lebih tinggi."]},{"cell_type":"code","execution_count":39,"metadata":{"id":"WFo2ywYpceSQ","executionInfo":{"status":"ok","timestamp":1655694562957,"user_tz":-480,"elapsed":373,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}}},"outputs":[],"source":["X_train_Cat=X_train_cat[['jeniskelamin','perokok']]\n","X_test_Cat= X_test_cat[['jeniskelamin','perokok']]"]},{"cell_type":"code","source":["X_train_Cat"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"cL-CL6ZIq43c","executionInfo":{"status":"ok","timestamp":1655694566122,"user_tz":-480,"elapsed":421,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"46a424f0-a63e-40b8-c407-615195ed50e9"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     jeniskelamin perokok\n","231        female      no\n","920        female      no\n","509        female      no\n","152        female      no\n","1089         male      no\n","...           ...     ...\n","1188       female     yes\n","1155       female      no\n","529          male      no\n","1157       female      no\n","1299       female      no\n","\n","[1062 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-b56f3495-4b72-4e63-997e-7c1fa06effc2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>jeniskelamin</th>\n","      <th>perokok</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>231</th>\n","      <td>female</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>920</th>\n","      <td>female</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>509</th>\n","      <td>female</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>152</th>\n","      <td>female</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>1089</th>\n","      <td>male</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1188</th>\n","      <td>female</td>\n","      <td>yes</td>\n","    </tr>\n","    <tr>\n","      <th>1155</th>\n","      <td>female</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>529</th>\n","      <td>male</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>1157</th>\n","      <td>female</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>1299</th>\n","      <td>female</td>\n","      <td>no</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1062 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b56f3495-4b72-4e63-997e-7c1fa06effc2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b56f3495-4b72-4e63-997e-7c1fa06effc2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b56f3495-4b72-4e63-997e-7c1fa06effc2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["X_test_Cat"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"8Y4ugeppq8EU","executionInfo":{"status":"ok","timestamp":1655694577472,"user_tz":-480,"elapsed":353,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"ca8f05e8-3d59-4fec-a9d5-3be36c8a50c8"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     jeniskelamin perokok\n","1178       female      no\n","1147       female      no\n","300          male      no\n","754          male      no\n","1283         male      no\n","...           ...     ...\n","925          male      no\n","798        female      no\n","22           male      no\n","306        female      no\n","685          male      no\n","\n","[266 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-97758935-ed7b-47b5-a77b-e1c425a977fe\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>jeniskelamin</th>\n","      <th>perokok</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1178</th>\n","      <td>female</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>1147</th>\n","      <td>female</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>300</th>\n","      <td>male</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>754</th>\n","      <td>male</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>1283</th>\n","      <td>male</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>925</th>\n","      <td>male</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>798</th>\n","      <td>female</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>male</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>306</th>\n","      <td>female</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>685</th>\n","      <td>male</td>\n","      <td>no</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>266 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-97758935-ed7b-47b5-a77b-e1c425a977fe')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-97758935-ed7b-47b5-a77b-e1c425a977fe button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-97758935-ed7b-47b5-a77b-e1c425a977fe');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["from sklearn.preprocessing import OneHotEncoder\n","encoder = OneHotEncoder()\n","encoder.fit(X_train_Cat)\n","X_train_Cat_encoded = encoder.transform(X_train_Cat).toarray()\n","X_test_Cat_encoded = encoder.transform(X_test_Cat).toarray()\n","X_train_Cat_encoded"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WgBaAH3Qnh6L","executionInfo":{"status":"ok","timestamp":1655694583445,"user_tz":-480,"elapsed":339,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"345c3c55-46d1-4a4f-d199-09e88fa6481d"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 0., 1., 0.],\n","       [1., 0., 1., 0.],\n","       [1., 0., 1., 0.],\n","       ...,\n","       [0., 1., 1., 0.],\n","       [1., 0., 1., 0.],\n","       [1., 0., 1., 0.]])"]},"metadata":{},"execution_count":42}]},{"cell_type":"markdown","metadata":{"id":"9vbTlG3CceSV"},"source":["### i - Menggabungkan Kolom numerik dan Kolom kategorik"]},{"cell_type":"markdown","metadata":{"id":"ro6cbthlceSW"},"source":["Kolom numerik dan kolom kategorik yang skala nya sudah sama semua, akan di gabungkan menjadi X_train_final dan X_test_final."]},{"cell_type":"code","execution_count":43,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SsMtpNXuceSW","executionInfo":{"status":"ok","timestamp":1655694590445,"user_tz":-480,"elapsed":342,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"80388fbc-5cea-400d-b71d-ac4be2dd4975"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.89130435, 0.35848097, 1.        , 0.        , 1.        ,\n","        0.        ],\n","       [0.95652174, 0.26637919, 1.        , 0.        , 1.        ,\n","        0.        ],\n","       [0.84782609, 0.38679495, 1.        , 0.        , 1.        ,\n","        0.        ],\n","       ...,\n","       [0.        , 0.2813498 , 0.        , 1.        , 1.        ,\n","        0.        ],\n","       [0.10869565, 0.20714765, 1.        , 0.        , 1.        ,\n","        0.        ],\n","       [0.02173913, 0.29062506, 1.        , 0.        , 1.        ,\n","        0.        ]])"]},"metadata":{},"execution_count":43}],"source":["# mengabungkan kolom numerik dengan kolom kategorical\n","\n","X_train_final = np.concatenate([X_train_num_scaled, X_train_Cat_encoded], axis=1)\n","X_test_final = np.concatenate([X_test_num_scaled, X_test_Cat_encoded], axis=1)\n","X_train_final"]},{"cell_type":"markdown","source":["## Data Preprocessing Logistic Regression"],"metadata":{"id":"s3nzfFZ2LZFe"}},{"cell_type":"markdown","source":["### a - Data Inference"],"metadata":{"id":"ftd_1chHLiVu"}},{"cell_type":"code","source":["datainfernce1 = data1.sample(10, random_state=17)\n","datainfernce1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"buyEo8wqLhyy","executionInfo":{"status":"ok","timestamp":1655696234918,"user_tz":-480,"elapsed":372,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"7ac2e4e8-8075-45c7-cd49-ff0ad765c210"},"execution_count":73,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Unnamed: 0     TType          K            C         A         S  \\\n","2953         2953  3.331900  27.923831     0.327536  0.749086  0.805582   \n","12758       12758 -1.168409   3.267242     0.365285  0.909178  0.881981   \n","11794       11794 -2.453251   6.348010 -9999.999999  0.782347  0.847836   \n","16721       16721 -1.577499  23.808023     0.429137  0.816243  0.762535   \n","1276         1276 -0.548032  11.675401     0.523664  0.827054  0.844778   \n","991           991 -2.210423  15.544851     0.399772  0.909889  0.850461   \n","6704         6704 -1.114931   5.087607 -9999.999999  0.907892  0.915372   \n","6330         6330 -1.966130   9.616412 -9999.999999  0.979614  0.526035   \n","5207         5207  2.380726  22.394027     0.277146  0.721813  0.814747   \n","7261         7261  0.007252   7.164415     0.409127  0.928519  0.860300   \n","\n","             G2         H  target  \n","2953   1.593298  0.751642       1  \n","12758  1.189916  0.634100       0  \n","11794  0.857569  0.573068       1  \n","16721  1.132787  0.572717       1  \n","1276   1.437644  0.644234       1  \n","991    1.229330  0.643354       1  \n","6704   1.105434  0.622796       1  \n","6330   0.388008  0.461513       0  \n","5207   1.421461  0.830230       1  \n","7261   1.101345  0.618623       1  "],"text/html":["\n","  <div id=\"df-59cc0150-a123-41dd-9738-294a33152405\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>TType</th>\n","      <th>K</th>\n","      <th>C</th>\n","      <th>A</th>\n","      <th>S</th>\n","      <th>G2</th>\n","      <th>H</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2953</th>\n","      <td>2953</td>\n","      <td>3.331900</td>\n","      <td>27.923831</td>\n","      <td>0.327536</td>\n","      <td>0.749086</td>\n","      <td>0.805582</td>\n","      <td>1.593298</td>\n","      <td>0.751642</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>12758</th>\n","      <td>12758</td>\n","      <td>-1.168409</td>\n","      <td>3.267242</td>\n","      <td>0.365285</td>\n","      <td>0.909178</td>\n","      <td>0.881981</td>\n","      <td>1.189916</td>\n","      <td>0.634100</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11794</th>\n","      <td>11794</td>\n","      <td>-2.453251</td>\n","      <td>6.348010</td>\n","      <td>-9999.999999</td>\n","      <td>0.782347</td>\n","      <td>0.847836</td>\n","      <td>0.857569</td>\n","      <td>0.573068</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>16721</th>\n","      <td>16721</td>\n","      <td>-1.577499</td>\n","      <td>23.808023</td>\n","      <td>0.429137</td>\n","      <td>0.816243</td>\n","      <td>0.762535</td>\n","      <td>1.132787</td>\n","      <td>0.572717</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1276</th>\n","      <td>1276</td>\n","      <td>-0.548032</td>\n","      <td>11.675401</td>\n","      <td>0.523664</td>\n","      <td>0.827054</td>\n","      <td>0.844778</td>\n","      <td>1.437644</td>\n","      <td>0.644234</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>991</th>\n","      <td>991</td>\n","      <td>-2.210423</td>\n","      <td>15.544851</td>\n","      <td>0.399772</td>\n","      <td>0.909889</td>\n","      <td>0.850461</td>\n","      <td>1.229330</td>\n","      <td>0.643354</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6704</th>\n","      <td>6704</td>\n","      <td>-1.114931</td>\n","      <td>5.087607</td>\n","      <td>-9999.999999</td>\n","      <td>0.907892</td>\n","      <td>0.915372</td>\n","      <td>1.105434</td>\n","      <td>0.622796</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6330</th>\n","      <td>6330</td>\n","      <td>-1.966130</td>\n","      <td>9.616412</td>\n","      <td>-9999.999999</td>\n","      <td>0.979614</td>\n","      <td>0.526035</td>\n","      <td>0.388008</td>\n","      <td>0.461513</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5207</th>\n","      <td>5207</td>\n","      <td>2.380726</td>\n","      <td>22.394027</td>\n","      <td>0.277146</td>\n","      <td>0.721813</td>\n","      <td>0.814747</td>\n","      <td>1.421461</td>\n","      <td>0.830230</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7261</th>\n","      <td>7261</td>\n","      <td>0.007252</td>\n","      <td>7.164415</td>\n","      <td>0.409127</td>\n","      <td>0.928519</td>\n","      <td>0.860300</td>\n","      <td>1.101345</td>\n","      <td>0.618623</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-59cc0150-a123-41dd-9738-294a33152405')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-59cc0150-a123-41dd-9738-294a33152405 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-59cc0150-a123-41dd-9738-294a33152405');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["# Hapus Kumpulan Inferensi dari Kumpulan Data\n","\n","data_train_test1 = data1.drop(datainfernce1.index)\n","data_train_test1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"G7PMNf5BLs2K","executionInfo":{"status":"ok","timestamp":1655696246451,"user_tz":-480,"elapsed":410,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"94239cfe-22c4-44bc-8aa3-b082c24a5271"},"execution_count":74,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Unnamed: 0     TType          K            C         A         S  \\\n","0               0  1.854829   6.560199     0.357051  0.932151  0.850992   \n","1               1  4.815538  25.950829     0.313292  0.610999  0.723122   \n","2               2  0.678056   6.867416     0.408286  0.881524  0.813231   \n","3               3 -0.547708  11.877941 -9999.999999  0.838779  0.816965   \n","4               4  2.028543  20.458965     0.446453  0.839216  0.801140   \n","...           ...       ...        ...          ...       ...       ...   \n","19995       19995  4.631655  29.018608     0.358020  0.602471  0.832848   \n","19996       19996 -2.179893  15.245582     0.470026  0.842624  0.868289   \n","19997       19997  1.876151   6.907812     0.323334  0.830340  0.950820   \n","19998       19998  5.053256  27.981613     0.393574  0.632766  0.825990   \n","19999       19999 -0.558501   6.557439     0.346322  0.878231  0.882251   \n","\n","             G2         H  target  \n","0      1.588183  0.697214       1  \n","1      1.533653  0.719412       1  \n","2      1.743747  0.750872       1  \n","3      1.672529  0.771995       1  \n","4      1.107665  0.610453       1  \n","...         ...       ...     ...  \n","19995  1.611594  0.735315       1  \n","19996  1.313089  0.649996       1  \n","19997  1.406042  0.671217       1  \n","19998  1.659363  0.379448       1  \n","19999  1.616493  0.738060       1  \n","\n","[19990 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-7ad4e858-7e23-45dd-8aa8-e3f56b4116f2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>TType</th>\n","      <th>K</th>\n","      <th>C</th>\n","      <th>A</th>\n","      <th>S</th>\n","      <th>G2</th>\n","      <th>H</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1.854829</td>\n","      <td>6.560199</td>\n","      <td>0.357051</td>\n","      <td>0.932151</td>\n","      <td>0.850992</td>\n","      <td>1.588183</td>\n","      <td>0.697214</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>4.815538</td>\n","      <td>25.950829</td>\n","      <td>0.313292</td>\n","      <td>0.610999</td>\n","      <td>0.723122</td>\n","      <td>1.533653</td>\n","      <td>0.719412</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>0.678056</td>\n","      <td>6.867416</td>\n","      <td>0.408286</td>\n","      <td>0.881524</td>\n","      <td>0.813231</td>\n","      <td>1.743747</td>\n","      <td>0.750872</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>-0.547708</td>\n","      <td>11.877941</td>\n","      <td>-9999.999999</td>\n","      <td>0.838779</td>\n","      <td>0.816965</td>\n","      <td>1.672529</td>\n","      <td>0.771995</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>2.028543</td>\n","      <td>20.458965</td>\n","      <td>0.446453</td>\n","      <td>0.839216</td>\n","      <td>0.801140</td>\n","      <td>1.107665</td>\n","      <td>0.610453</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>19995</th>\n","      <td>19995</td>\n","      <td>4.631655</td>\n","      <td>29.018608</td>\n","      <td>0.358020</td>\n","      <td>0.602471</td>\n","      <td>0.832848</td>\n","      <td>1.611594</td>\n","      <td>0.735315</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19996</th>\n","      <td>19996</td>\n","      <td>-2.179893</td>\n","      <td>15.245582</td>\n","      <td>0.470026</td>\n","      <td>0.842624</td>\n","      <td>0.868289</td>\n","      <td>1.313089</td>\n","      <td>0.649996</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19997</th>\n","      <td>19997</td>\n","      <td>1.876151</td>\n","      <td>6.907812</td>\n","      <td>0.323334</td>\n","      <td>0.830340</td>\n","      <td>0.950820</td>\n","      <td>1.406042</td>\n","      <td>0.671217</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19998</th>\n","      <td>19998</td>\n","      <td>5.053256</td>\n","      <td>27.981613</td>\n","      <td>0.393574</td>\n","      <td>0.632766</td>\n","      <td>0.825990</td>\n","      <td>1.659363</td>\n","      <td>0.379448</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19999</th>\n","      <td>19999</td>\n","      <td>-0.558501</td>\n","      <td>6.557439</td>\n","      <td>0.346322</td>\n","      <td>0.878231</td>\n","      <td>0.882251</td>\n","      <td>1.616493</td>\n","      <td>0.738060</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>19990 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7ad4e858-7e23-45dd-8aa8-e3f56b4116f2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7ad4e858-7e23-45dd-8aa8-e3f56b4116f2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7ad4e858-7e23-45dd-8aa8-e3f56b4116f2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":74}]},{"cell_type":"markdown","source":["Dataset awal insurance memiliki 20000 baris kemudian hilangkan kumpulan data inference dari insurance menjadi 19990, berkurang 10 data."],"metadata":{"id":"Mj50JU5CL0jv"}},{"cell_type":"code","source":["# Reset Index\n","# Agar tidak terjadi yang tidak diinginkan, data di reset index nya\n","\n","data_train_test1.reset_index(drop=True, inplace=True) #drop true menghapus index lama kemudian di bentuk ulang dari inplace=true\n","datainfernce1.reset_index(drop=True, inplace=True)\n","datainfernce1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"XQ8EwmVDMU-v","executionInfo":{"status":"ok","timestamp":1655696361914,"user_tz":-480,"elapsed":398,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"143c1293-8d39-4ae6-de59-0259f9156a99"},"execution_count":75,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0     TType          K            C         A         S        G2  \\\n","0        2953  3.331900  27.923831     0.327536  0.749086  0.805582  1.593298   \n","1       12758 -1.168409   3.267242     0.365285  0.909178  0.881981  1.189916   \n","2       11794 -2.453251   6.348010 -9999.999999  0.782347  0.847836  0.857569   \n","3       16721 -1.577499  23.808023     0.429137  0.816243  0.762535  1.132787   \n","4        1276 -0.548032  11.675401     0.523664  0.827054  0.844778  1.437644   \n","5         991 -2.210423  15.544851     0.399772  0.909889  0.850461  1.229330   \n","6        6704 -1.114931   5.087607 -9999.999999  0.907892  0.915372  1.105434   \n","7        6330 -1.966130   9.616412 -9999.999999  0.979614  0.526035  0.388008   \n","8        5207  2.380726  22.394027     0.277146  0.721813  0.814747  1.421461   \n","9        7261  0.007252   7.164415     0.409127  0.928519  0.860300  1.101345   \n","\n","          H  target  \n","0  0.751642       1  \n","1  0.634100       0  \n","2  0.573068       1  \n","3  0.572717       1  \n","4  0.644234       1  \n","5  0.643354       1  \n","6  0.622796       1  \n","7  0.461513       0  \n","8  0.830230       1  \n","9  0.618623       1  "],"text/html":["\n","  <div id=\"df-4aeeaebb-e7d3-4dee-a91c-007e1ef39891\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>TType</th>\n","      <th>K</th>\n","      <th>C</th>\n","      <th>A</th>\n","      <th>S</th>\n","      <th>G2</th>\n","      <th>H</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2953</td>\n","      <td>3.331900</td>\n","      <td>27.923831</td>\n","      <td>0.327536</td>\n","      <td>0.749086</td>\n","      <td>0.805582</td>\n","      <td>1.593298</td>\n","      <td>0.751642</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>12758</td>\n","      <td>-1.168409</td>\n","      <td>3.267242</td>\n","      <td>0.365285</td>\n","      <td>0.909178</td>\n","      <td>0.881981</td>\n","      <td>1.189916</td>\n","      <td>0.634100</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>11794</td>\n","      <td>-2.453251</td>\n","      <td>6.348010</td>\n","      <td>-9999.999999</td>\n","      <td>0.782347</td>\n","      <td>0.847836</td>\n","      <td>0.857569</td>\n","      <td>0.573068</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>16721</td>\n","      <td>-1.577499</td>\n","      <td>23.808023</td>\n","      <td>0.429137</td>\n","      <td>0.816243</td>\n","      <td>0.762535</td>\n","      <td>1.132787</td>\n","      <td>0.572717</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1276</td>\n","      <td>-0.548032</td>\n","      <td>11.675401</td>\n","      <td>0.523664</td>\n","      <td>0.827054</td>\n","      <td>0.844778</td>\n","      <td>1.437644</td>\n","      <td>0.644234</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>991</td>\n","      <td>-2.210423</td>\n","      <td>15.544851</td>\n","      <td>0.399772</td>\n","      <td>0.909889</td>\n","      <td>0.850461</td>\n","      <td>1.229330</td>\n","      <td>0.643354</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6704</td>\n","      <td>-1.114931</td>\n","      <td>5.087607</td>\n","      <td>-9999.999999</td>\n","      <td>0.907892</td>\n","      <td>0.915372</td>\n","      <td>1.105434</td>\n","      <td>0.622796</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>6330</td>\n","      <td>-1.966130</td>\n","      <td>9.616412</td>\n","      <td>-9999.999999</td>\n","      <td>0.979614</td>\n","      <td>0.526035</td>\n","      <td>0.388008</td>\n","      <td>0.461513</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>5207</td>\n","      <td>2.380726</td>\n","      <td>22.394027</td>\n","      <td>0.277146</td>\n","      <td>0.721813</td>\n","      <td>0.814747</td>\n","      <td>1.421461</td>\n","      <td>0.830230</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>7261</td>\n","      <td>0.007252</td>\n","      <td>7.164415</td>\n","      <td>0.409127</td>\n","      <td>0.928519</td>\n","      <td>0.860300</td>\n","      <td>1.101345</td>\n","      <td>0.618623</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4aeeaebb-e7d3-4dee-a91c-007e1ef39891')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4aeeaebb-e7d3-4dee-a91c-007e1ef39891 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4aeeaebb-e7d3-4dee-a91c-007e1ef39891');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":75}]},{"cell_type":"markdown","source":["### b - Splitting DataSet"],"metadata":{"id":"Owx4pm1kMlxu"}},{"cell_type":"code","source":["# Pemisahan `X` (Fitur) dan `y` (Target)\n","\n","X1 = data_train_test1.drop('target', axis=1) #menghapus kolom axis=1 harga, untuk dimasukkan dan dibagi menjadi train/test\n","y1 = data_train_test1['target']"],"metadata":{"id":"zvl1nfxYMtFN","executionInfo":{"status":"ok","timestamp":1655696565023,"user_tz":-480,"elapsed":23,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}}},"execution_count":76,"outputs":[]},{"cell_type":"code","source":["# Train-Set and Test-Set\n","# Memasukkan nilai x dan y, test_size artinya split 80% untuk train, dan 20% untuk test\n","X_train1, X_test1, y_train1, y_test1 = train_test_split(X1, y1, test_size=0.2, random_state=10)\n","print('Train Size : ', X_train1.shape)\n","print('Test Size : ', X_test1.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SQZ1yT7pMwGj","executionInfo":{"status":"ok","timestamp":1655696568665,"user_tz":-480,"elapsed":517,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"6b831404-2ea2-4163-f25d-f4cb83fada1d"},"execution_count":77,"outputs":[{"output_type":"stream","name":"stdout","text":["Train Size :  (15992, 8)\n","Test Size :  (3998, 8)\n"]}]},{"cell_type":"markdown","source":["Setelah dilakukan pemisahan training set dan testing set, diperoleh ukuran train sebesar 15992 baris dan 8 kolom, serta ukuran test sebesar 3998 baris dan 8 kolom."],"metadata":{"id":"SViv1YM-M43P"}},{"cell_type":"markdown","source":["### c - Feature selection"],"metadata":{"id":"WOeL9AY2NW0_"}},{"cell_type":"code","source":["plt.figure(figsize=(10,8))\n","sns.heatmap(data1.corr(), annot=True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"kj-4MF8kNbXD","executionInfo":{"status":"ok","timestamp":1655696672454,"user_tz":-480,"elapsed":1318,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"9235ecff-f6f0-4b68-dc2d-701d2b942907"},"execution_count":78,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x576 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["Hanya ambil kolom C, A , S, G2, dan H untuk dijadikan features."],"metadata":{"id":"d9gCDPHzNikk"}},{"cell_type":"markdown","source":["### d - Handling Missing Value"],"metadata":{"id":"5IUHnM2uNrih"}},{"cell_type":"code","source":["# Mengecek Missing Values on X_train\n","X_train1.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xeImxd0RNyOY","executionInfo":{"status":"ok","timestamp":1655696816570,"user_tz":-480,"elapsed":714,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"12b9cc43-bfef-4b61-94e9-9c310214d0ba"},"execution_count":79,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Unnamed: 0    0\n","TType         0\n","K             0\n","C             0\n","A             0\n","S             0\n","G2            0\n","H             0\n","dtype: int64"]},"metadata":{},"execution_count":79}]},{"cell_type":"code","source":["# Mengecek Missing Values on X_test\n","\n","X_test1.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uAsUjN6yN2IH","executionInfo":{"status":"ok","timestamp":1655696819874,"user_tz":-480,"elapsed":362,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"dc32b376-4411-4654-9a12-3668c580a2b5"},"execution_count":80,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Unnamed: 0    0\n","TType         0\n","K             0\n","C             0\n","A             0\n","S             0\n","G2            0\n","H             0\n","dtype: int64"]},"metadata":{},"execution_count":80}]},{"cell_type":"code","source":["# Mengecek Missing Values on y_train\n","y_train1.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oipBZsJcN8K8","executionInfo":{"status":"ok","timestamp":1655696824451,"user_tz":-480,"elapsed":10,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"b60c66dc-3e36-4e15-ae05-0a51ff66e1d1"},"execution_count":81,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":81}]},{"cell_type":"code","source":["# Mengecek Missing Values on y_test\n","\n","y_test1.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SWdpBQyeOAg1","executionInfo":{"status":"ok","timestamp":1655696827309,"user_tz":-480,"elapsed":12,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"02adcaee-686f-4873-855c-d76a2953096f"},"execution_count":82,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":82}]},{"cell_type":"markdown","source":["Setelah di lakukan proses handling missing value maka variabel X_train1, X_test1, y_train1 dan y_test1 sudah bersih dari Nan data. Selanjutnya akan dilakukan handling outlier."],"metadata":{"id":"XlVHbysAOOg-"}},{"cell_type":"markdown","source":["### e - Handling Outlier"],"metadata":{"id":"pai4Sr5jOTcm"}},{"cell_type":"code","source":["# Berfungsi untuk membuat histogram dan boxplot.\n","# Fungsi ini menggunakan kerangka data (df) dan variabel yang diinginkan sebagai argumen.\n","\n","def diagnostic_plots(data1, variable):\n","    # Define figure size\n","    plt.figure(figsize=(16, 4))\n","\n","    # Histogram\n","    plt.subplot(1, 2, 1)\n","    sns.histplot(data1[variable], bins=30)\n","    plt.title('Histogram')\n","\n","    # Boxplot\n","    plt.subplot(1, 2, 2)\n","    sns.boxplot(y=data1[variable])\n","    plt.title('Boxplot')"],"metadata":{"id":"OA22bBGJOXtl","executionInfo":{"status":"ok","timestamp":1655696948290,"user_tz":-480,"elapsed":364,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}}},"execution_count":83,"outputs":[]},{"cell_type":"code","source":["diagnostic_plots(X_train1, 'C')\n","print('\\nSkewness Value C: ', X_train1['C'].skew())\n","\n","diagnostic_plots(X_train1, 'A')\n","print('\\nSkewness Value A: ', X_train1['A'].skew())\n","\n","diagnostic_plots(X_train1, 'S')\n","print('\\nSkewness Value S: ', X_train1['S'].skew())\n","\n","diagnostic_plots(X_train1, 'G2')\n","print('\\nSkewness Value G2: ', X_train1['G2'].skew())\n","\n","diagnostic_plots(X_train1, 'H')\n","print('\\nSkewness Value H: ', X_train1['H'].skew())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"Ny70pJyyOrcW","executionInfo":{"status":"ok","timestamp":1655697250957,"user_tz":-480,"elapsed":2602,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"89ed04cd-cb15-40c7-acd7-f69647362f5c"},"execution_count":86,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Skewness Value C:  -1.6245005241630754\n","\n","Skewness Value A:  -126.45901196556646\n","\n","Skewness Value S:  -51.602577294273274\n","\n","Skewness Value G2:  -0.8568476108269931\n","\n","Skewness Value H:  -0.6496440226404944\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["Dikatakan berdistribusi normal ketika nilai rasio skewness berada pada rentang nilai -2 sampai 2. Berdasarkan visualisasi distribusi normal bahwa nilai skewness untuk variabel A sebesar -126.45 dan variabel S sebesar yang berarti tidak normal. Sedangkan visualisasi distribusi normal bahwa nilai skewness untuk variabel C sebesar -1.62, variabel G2 sebesar -0.85 dan variabel H sebesar -0.64 yang berarti normal. Tetapi untuk Boxplot pengecekan oulier semua variabel terdapat outlier. oleh karena itu akan dilakukan mencegak outlier dengan metode capping."],"metadata":{"id":"AqH2zJSyQDug"}},{"cell_type":"markdown","source":["--- MENGATASI OUTLIER"],"metadata":{"id":"f-07O4gpRIRm"}},{"cell_type":"code","source":["# Menghitung/menentukan nilai IQR untuk data numerik\n","X_train_1 = Winsorizer(capping_method='iqr', \n","                          tail='both', \n","                          fold=1.5,\n","                          variables=['C','A','S','G2','H'])\n","\n","X_train_1.fit(X_train1)\n","\n","X_train_clear1 = X_train_1.transform(X_train1) "],"metadata":{"id":"IGqBLJBLRHFt","executionInfo":{"status":"ok","timestamp":1655697788656,"user_tz":-480,"elapsed":347,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}}},"execution_count":87,"outputs":[]},{"cell_type":"code","source":["# Pemeriksaan data outlier\n","# Periksa batas minimum untuk setiap variabel\n","print('Left Tail Caps  : ', X_train_1.left_tail_caps_)\n","print('           ')\n","# Periksa batas maksimum untuk setiap variabel\n","print('Right Tail Caps : ', X_train_1.right_tail_caps_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"22nTEB_yRfLd","executionInfo":{"status":"ok","timestamp":1655697801176,"user_tz":-480,"elapsed":514,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"af82bba3-4405-41e0-a253-5a7204a78456"},"execution_count":88,"outputs":[{"output_type":"stream","name":"stdout","text":["Left Tail Caps  :  {'C': 0.07653620543187492, 'A': 0.5998129844680001, 'S': 0.5582461133612499, 'G2': 0.041795112195624484, 'H': 0.34955000877425}\n","           \n","Right Tail Caps :  {'C': 0.653649729294875, 'A': 1.0886417627319998, 'S': 1.0880165472612502, 'G2': 2.5417924299786256, 'H': 0.97772049903825}\n"]}]},{"cell_type":"code","source":["# DIPEROLEH X_train YANG SUDAH DI LAKUKAN DATA CLEANING/FEATURE ENGINEERING\n","# Variabel X_train_clear sudah bersih dari Missing Value dan Outlier\n","X_train_clear1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"p1AqVLo2RlIW","executionInfo":{"status":"ok","timestamp":1655697812251,"user_tz":-480,"elapsed":392,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"3252dbf0-397c-4620-e75d-b818521c3b75"},"execution_count":89,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Unnamed: 0     TType          K         C         A         S  \\\n","13692       13701 -1.826837   9.468036  0.076536  0.834987  0.819385   \n","4744         4747 -0.869850  14.721812  0.076536  0.838531  0.797596   \n","1818         1820  0.333815  10.505428  0.329326  0.813307  0.837674   \n","9002         9009  3.649707  10.396799  0.272582  0.743504  0.928296   \n","12742       12750  0.847721   7.829603  0.076536  0.933226  0.852060   \n","...           ...       ...        ...       ...       ...       ...   \n","9372         9379 -0.866174   4.401315  0.076536  0.849499  0.907637   \n","7291         7298 -2.449429  11.191034  0.076536  0.887148  0.898034   \n","17728       17738  0.584328   3.705567  0.076536  0.914322  0.900600   \n","7293         7300 -2.053782   7.282517  0.452262  0.842819  0.558246   \n","17673       17683  4.687534  12.810181  0.291926  0.629814  0.797536   \n","\n","             G2         H  \n","13692  0.980597  0.605725  \n","4744   1.545579  0.667841  \n","1818   1.656557  0.737534  \n","9002   1.782196  0.830441  \n","12742  1.387393  0.695812  \n","...         ...       ...  \n","9372   1.284725  0.681494  \n","7291   0.911618  0.576723  \n","17728  1.350147  0.661591  \n","7293   0.321564  0.470043  \n","17673  1.658710  0.747919  \n","\n","[15992 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-5270b61d-2bd9-46ee-81e5-77869911bfc5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>TType</th>\n","      <th>K</th>\n","      <th>C</th>\n","      <th>A</th>\n","      <th>S</th>\n","      <th>G2</th>\n","      <th>H</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>13692</th>\n","      <td>13701</td>\n","      <td>-1.826837</td>\n","      <td>9.468036</td>\n","      <td>0.076536</td>\n","      <td>0.834987</td>\n","      <td>0.819385</td>\n","      <td>0.980597</td>\n","      <td>0.605725</td>\n","    </tr>\n","    <tr>\n","      <th>4744</th>\n","      <td>4747</td>\n","      <td>-0.869850</td>\n","      <td>14.721812</td>\n","      <td>0.076536</td>\n","      <td>0.838531</td>\n","      <td>0.797596</td>\n","      <td>1.545579</td>\n","      <td>0.667841</td>\n","    </tr>\n","    <tr>\n","      <th>1818</th>\n","      <td>1820</td>\n","      <td>0.333815</td>\n","      <td>10.505428</td>\n","      <td>0.329326</td>\n","      <td>0.813307</td>\n","      <td>0.837674</td>\n","      <td>1.656557</td>\n","      <td>0.737534</td>\n","    </tr>\n","    <tr>\n","      <th>9002</th>\n","      <td>9009</td>\n","      <td>3.649707</td>\n","      <td>10.396799</td>\n","      <td>0.272582</td>\n","      <td>0.743504</td>\n","      <td>0.928296</td>\n","      <td>1.782196</td>\n","      <td>0.830441</td>\n","    </tr>\n","    <tr>\n","      <th>12742</th>\n","      <td>12750</td>\n","      <td>0.847721</td>\n","      <td>7.829603</td>\n","      <td>0.076536</td>\n","      <td>0.933226</td>\n","      <td>0.852060</td>\n","      <td>1.387393</td>\n","      <td>0.695812</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>9372</th>\n","      <td>9379</td>\n","      <td>-0.866174</td>\n","      <td>4.401315</td>\n","      <td>0.076536</td>\n","      <td>0.849499</td>\n","      <td>0.907637</td>\n","      <td>1.284725</td>\n","      <td>0.681494</td>\n","    </tr>\n","    <tr>\n","      <th>7291</th>\n","      <td>7298</td>\n","      <td>-2.449429</td>\n","      <td>11.191034</td>\n","      <td>0.076536</td>\n","      <td>0.887148</td>\n","      <td>0.898034</td>\n","      <td>0.911618</td>\n","      <td>0.576723</td>\n","    </tr>\n","    <tr>\n","      <th>17728</th>\n","      <td>17738</td>\n","      <td>0.584328</td>\n","      <td>3.705567</td>\n","      <td>0.076536</td>\n","      <td>0.914322</td>\n","      <td>0.900600</td>\n","      <td>1.350147</td>\n","      <td>0.661591</td>\n","    </tr>\n","    <tr>\n","      <th>7293</th>\n","      <td>7300</td>\n","      <td>-2.053782</td>\n","      <td>7.282517</td>\n","      <td>0.452262</td>\n","      <td>0.842819</td>\n","      <td>0.558246</td>\n","      <td>0.321564</td>\n","      <td>0.470043</td>\n","    </tr>\n","    <tr>\n","      <th>17673</th>\n","      <td>17683</td>\n","      <td>4.687534</td>\n","      <td>12.810181</td>\n","      <td>0.291926</td>\n","      <td>0.629814</td>\n","      <td>0.797536</td>\n","      <td>1.658710</td>\n","      <td>0.747919</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>15992 rows × 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5270b61d-2bd9-46ee-81e5-77869911bfc5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5270b61d-2bd9-46ee-81e5-77869911bfc5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5270b61d-2bd9-46ee-81e5-77869911bfc5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":89}]},{"cell_type":"markdown","source":["### f - Feature Scaling"],"metadata":{"id":"etZZD7O6SB-r"}},{"cell_type":"code","source":["X_train_Clear1=X_train_clear1[['C','A','S','G2','H']]\n","X_test_Clear1= X_test1[['C','A','S','G2','H']]\n","X_train_Clear1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"N5Q0aawtSgbI","executionInfo":{"status":"ok","timestamp":1655698056346,"user_tz":-480,"elapsed":372,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"dc6d5a39-3616-462f-f06e-4239f9222a9a"},"execution_count":91,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              C         A         S        G2         H\n","13692  0.076536  0.834987  0.819385  0.980597  0.605725\n","4744   0.076536  0.838531  0.797596  1.545579  0.667841\n","1818   0.329326  0.813307  0.837674  1.656557  0.737534\n","9002   0.272582  0.743504  0.928296  1.782196  0.830441\n","12742  0.076536  0.933226  0.852060  1.387393  0.695812\n","...         ...       ...       ...       ...       ...\n","9372   0.076536  0.849499  0.907637  1.284725  0.681494\n","7291   0.076536  0.887148  0.898034  0.911618  0.576723\n","17728  0.076536  0.914322  0.900600  1.350147  0.661591\n","7293   0.452262  0.842819  0.558246  0.321564  0.470043\n","17673  0.291926  0.629814  0.797536  1.658710  0.747919\n","\n","[15992 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-d2b498ef-6cb3-451b-bdb2-1d668f8f37fa\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>C</th>\n","      <th>A</th>\n","      <th>S</th>\n","      <th>G2</th>\n","      <th>H</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>13692</th>\n","      <td>0.076536</td>\n","      <td>0.834987</td>\n","      <td>0.819385</td>\n","      <td>0.980597</td>\n","      <td>0.605725</td>\n","    </tr>\n","    <tr>\n","      <th>4744</th>\n","      <td>0.076536</td>\n","      <td>0.838531</td>\n","      <td>0.797596</td>\n","      <td>1.545579</td>\n","      <td>0.667841</td>\n","    </tr>\n","    <tr>\n","      <th>1818</th>\n","      <td>0.329326</td>\n","      <td>0.813307</td>\n","      <td>0.837674</td>\n","      <td>1.656557</td>\n","      <td>0.737534</td>\n","    </tr>\n","    <tr>\n","      <th>9002</th>\n","      <td>0.272582</td>\n","      <td>0.743504</td>\n","      <td>0.928296</td>\n","      <td>1.782196</td>\n","      <td>0.830441</td>\n","    </tr>\n","    <tr>\n","      <th>12742</th>\n","      <td>0.076536</td>\n","      <td>0.933226</td>\n","      <td>0.852060</td>\n","      <td>1.387393</td>\n","      <td>0.695812</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>9372</th>\n","      <td>0.076536</td>\n","      <td>0.849499</td>\n","      <td>0.907637</td>\n","      <td>1.284725</td>\n","      <td>0.681494</td>\n","    </tr>\n","    <tr>\n","      <th>7291</th>\n","      <td>0.076536</td>\n","      <td>0.887148</td>\n","      <td>0.898034</td>\n","      <td>0.911618</td>\n","      <td>0.576723</td>\n","    </tr>\n","    <tr>\n","      <th>17728</th>\n","      <td>0.076536</td>\n","      <td>0.914322</td>\n","      <td>0.900600</td>\n","      <td>1.350147</td>\n","      <td>0.661591</td>\n","    </tr>\n","    <tr>\n","      <th>7293</th>\n","      <td>0.452262</td>\n","      <td>0.842819</td>\n","      <td>0.558246</td>\n","      <td>0.321564</td>\n","      <td>0.470043</td>\n","    </tr>\n","    <tr>\n","      <th>17673</th>\n","      <td>0.291926</td>\n","      <td>0.629814</td>\n","      <td>0.797536</td>\n","      <td>1.658710</td>\n","      <td>0.747919</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>15992 rows × 5 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d2b498ef-6cb3-451b-bdb2-1d668f8f37fa')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d2b498ef-6cb3-451b-bdb2-1d668f8f37fa button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d2b498ef-6cb3-451b-bdb2-1d668f8f37fa');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":91}]},{"cell_type":"code","source":["X_test_Clear1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"7rJhQbTOS5XE","executionInfo":{"status":"ok","timestamp":1655698074858,"user_tz":-480,"elapsed":423,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"0e0bbbaf-253c-4850-bccf-eb6865155b81"},"execution_count":92,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 C         A         S        G2         H\n","8222  -9999.999999  0.837161  0.848222  1.717376  0.801207\n","16861     0.487460  0.949319  0.808960  0.436495  0.461571\n","12173     0.460595  0.768684  0.520041  0.791177  0.554810\n","8002      0.312655  0.888694  0.935659  1.605145  0.746840\n","12580 -9999.999999  0.941922  0.860924  1.092252  0.613422\n","...            ...       ...       ...       ...       ...\n","16579     0.414168  0.902315  0.731760  0.567400  0.535716\n","15478     0.319184  0.855829  0.866069  1.744929  0.787040\n","6591      0.427735  0.795731  0.474856  0.983768  0.589636\n","9894  -9999.999999  0.895775  0.942272  1.756713  0.776596\n","9980  -9999.999999  0.931275  0.858392  1.094614  0.618179\n","\n","[3998 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-a1538c62-e9a8-428c-8575-9c8d431b1ace\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>C</th>\n","      <th>A</th>\n","      <th>S</th>\n","      <th>G2</th>\n","      <th>H</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>8222</th>\n","      <td>-9999.999999</td>\n","      <td>0.837161</td>\n","      <td>0.848222</td>\n","      <td>1.717376</td>\n","      <td>0.801207</td>\n","    </tr>\n","    <tr>\n","      <th>16861</th>\n","      <td>0.487460</td>\n","      <td>0.949319</td>\n","      <td>0.808960</td>\n","      <td>0.436495</td>\n","      <td>0.461571</td>\n","    </tr>\n","    <tr>\n","      <th>12173</th>\n","      <td>0.460595</td>\n","      <td>0.768684</td>\n","      <td>0.520041</td>\n","      <td>0.791177</td>\n","      <td>0.554810</td>\n","    </tr>\n","    <tr>\n","      <th>8002</th>\n","      <td>0.312655</td>\n","      <td>0.888694</td>\n","      <td>0.935659</td>\n","      <td>1.605145</td>\n","      <td>0.746840</td>\n","    </tr>\n","    <tr>\n","      <th>12580</th>\n","      <td>-9999.999999</td>\n","      <td>0.941922</td>\n","      <td>0.860924</td>\n","      <td>1.092252</td>\n","      <td>0.613422</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>16579</th>\n","      <td>0.414168</td>\n","      <td>0.902315</td>\n","      <td>0.731760</td>\n","      <td>0.567400</td>\n","      <td>0.535716</td>\n","    </tr>\n","    <tr>\n","      <th>15478</th>\n","      <td>0.319184</td>\n","      <td>0.855829</td>\n","      <td>0.866069</td>\n","      <td>1.744929</td>\n","      <td>0.787040</td>\n","    </tr>\n","    <tr>\n","      <th>6591</th>\n","      <td>0.427735</td>\n","      <td>0.795731</td>\n","      <td>0.474856</td>\n","      <td>0.983768</td>\n","      <td>0.589636</td>\n","    </tr>\n","    <tr>\n","      <th>9894</th>\n","      <td>-9999.999999</td>\n","      <td>0.895775</td>\n","      <td>0.942272</td>\n","      <td>1.756713</td>\n","      <td>0.776596</td>\n","    </tr>\n","    <tr>\n","      <th>9980</th>\n","      <td>-9999.999999</td>\n","      <td>0.931275</td>\n","      <td>0.858392</td>\n","      <td>1.094614</td>\n","      <td>0.618179</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3998 rows × 5 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a1538c62-e9a8-428c-8575-9c8d431b1ace')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a1538c62-e9a8-428c-8575-9c8d431b1ace button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a1538c62-e9a8-428c-8575-9c8d431b1ace');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":92}]},{"cell_type":"code","source":["# Dapatkan Variabel Baru Kolom Numerik dan Kolom Kategorik\n","\n","KolomNumerik1 = X_train_Clear1.select_dtypes(include=np.number).columns.tolist()\n","\n","print('Kolom Numerik dari dataset rideshare : ', KolomNumerik1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ztJGndfPTOiR","executionInfo":{"status":"ok","timestamp":1655698194539,"user_tz":-480,"elapsed":343,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"9ecb0c44-9912-4082-e226-6d1bd92fdf0e"},"execution_count":93,"outputs":[{"output_type":"stream","name":"stdout","text":["Kolom Numerik dari dataset rideshare :  ['C', 'A', 'S', 'G2', 'H']\n"]}]},{"cell_type":"code","source":["# buat variabel x_train untuk numerik/kategorik dan buat variabel x_train untuk numerik/kategorik\n","\n","X_train_num1 = X_train_Clear1[KolomNumerik1]\n","\n","X_test_num1 = X_test1[KolomNumerik1]"],"metadata":{"id":"GvK__RHHSFiF","executionInfo":{"status":"ok","timestamp":1655698200005,"user_tz":-480,"elapsed":487,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}}},"execution_count":94,"outputs":[]},{"cell_type":"code","source":["# Feature Scaling using MinMaxScaler\n","\n","scaler1 = MinMaxScaler() # Nilainya di ubah skalanya menjadi 0 sampai 1\n","scaler1.fit(X_train_num1)\n","\n","X_train_num_scaled1 = scaler1.transform(X_train_num1) #setelah di lakukan scaler baru di transform/mengubah nilainya menjadi 0 sampai 1\n","X_test_num_scaled1 = scaler1.transform(X_test_num1)\n","X_train_num_scaled1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5IbJ0fV8SUvY","executionInfo":{"status":"ok","timestamp":1655700013719,"user_tz":-480,"elapsed":338,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"bbeb3fed-d09d-48cc-9ff9-7668d32aa483"},"execution_count":108,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.        , 0.61282723, 0.62059762, 0.50542392, 0.4413784 ],\n","       [0.        , 0.62206243, 0.56881728, 0.80959372, 0.54840239],\n","       [0.43802442, 0.55633238, 0.66406319, 0.86934107, 0.66848032],\n","       ...,\n","       [0.        , 0.81956149, 0.81360742, 0.70437888, 0.53763334],\n","       [0.65104398, 0.63323649, 0.        , 0.15061937, 0.20760424],\n","       [0.37321945, 0.07817866, 0.56867421, 0.87050034, 0.68637403]])"]},"metadata":{},"execution_count":108}]},{"cell_type":"markdown","source":["### g - Feature Encoding"],"metadata":{"id":"6AKePGiaTjIU"}},{"cell_type":"code","source":["y_train1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vdjRHpiBTvRY","executionInfo":{"status":"ok","timestamp":1655698302648,"user_tz":-480,"elapsed":351,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"842aa306-d203-4e1e-e06c-bb9f38c726c5"},"execution_count":96,"outputs":[{"output_type":"execute_result","data":{"text/plain":["13692    0\n","4744     1\n","1818     1\n","9002     1\n","12742    1\n","        ..\n","9372     1\n","7291     1\n","17728    1\n","7293     0\n","17673    1\n","Name: target, Length: 15992, dtype: int64"]},"metadata":{},"execution_count":96}]},{"cell_type":"code","source":["y_test1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OSxq6yzcTziO","executionInfo":{"status":"ok","timestamp":1655698316868,"user_tz":-480,"elapsed":357,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"a7b3386a-14c0-4e4c-cd3c-5cfdc8b3f32e"},"execution_count":97,"outputs":[{"output_type":"execute_result","data":{"text/plain":["8222     1\n","16861    0\n","12173    1\n","8002     1\n","12580    1\n","        ..\n","16579    0\n","15478    1\n","6591     1\n","9894     1\n","9980     0\n","Name: target, Length: 3998, dtype: int64"]},"metadata":{},"execution_count":97}]},{"cell_type":"code","source":["# UNtuk Y Train Logistic\n","from sklearn.preprocessing import LabelEncoder\n","encoder1 = LabelEncoder()\n","encoder1.fit(y_train1)\n","y_train_encoded = encoder1.transform(y_train1)\n","y_test_encoded = encoder1.transform(y_test1)\n","y_train_encoded"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CStaKvDCT_Fk","executionInfo":{"status":"ok","timestamp":1655700035554,"user_tz":-480,"elapsed":342,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"6e5bf85f-5ed3-4280-afdc-8d44c6d9b886"},"execution_count":109,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 1, ..., 1, 0, 1])"]},"metadata":{},"execution_count":109}]},{"cell_type":"markdown","metadata":{"id":"KMLn0EcMceSX"},"source":["# 7 - Model Definition"]},{"cell_type":"markdown","source":["> Bagian ini berisi proses penyiapan data untuk proses pelatihan model, seperti pembagian data menjadi train-test-inference, transformasi data (normalisasi, encoding, dll.), dan proses-proses lain yang dibutuhkan.\n"],"metadata":{"id":"XYaOG9XYUkj_"}},{"cell_type":"markdown","source":["## Model Definition Linear Regression"],"metadata":{"id":"14C5vk22VJid"}},{"cell_type":"code","execution_count":100,"metadata":{"id":"G4-lePxQceSY","executionInfo":{"status":"ok","timestamp":1655698617464,"user_tz":-480,"elapsed":352,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}}},"outputs":[],"source":["# Training using Linear Regression\n","# Algoritma yang akan di gunakan untuk memproses data adalah linear regression dan metrics yang digunakan adalah R square\n","model_lin_reg = LinearRegression()\n"]},{"cell_type":"markdown","source":["## Model Definition Logistic Regression"],"metadata":{"id":"oFzxhKQfVQj6"}},{"cell_type":"code","source":["# Training using Logistic Regression\n","# Algoritma yang akan di gunakan untuk memproses data adalah logistic regression dan metrics yang digunakan adalah accuary\n","\n","from sklearn.linear_model import LogisticRegression\n","model_log_reg = LogisticRegression()"],"metadata":{"id":"hvKAdVtQFqJf","executionInfo":{"status":"ok","timestamp":1655700041820,"user_tz":-480,"elapsed":349,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}}},"execution_count":110,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"N1X6aGO5ceSY"},"source":["# 8 - Model Training"]},{"cell_type":"markdown","metadata":{"id":"sdq5KaU2ceSj"},"source":["> Bagian ini berisi cell untuk mendefinisikan model. Jelaskan alasan menggunakan suatu algoritma/model, hyperparameter yang dipakai, jenis penggunaan metrics yang dipakai, dan hal lain yang terkait dengan model."]},{"cell_type":"markdown","source":["## Model Training Linear Regression"],"metadata":{"id":"5s9nT2nOVbNi"}},{"cell_type":"code","execution_count":45,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f0c8XIsCceSk","executionInfo":{"status":"ok","timestamp":1655694631020,"user_tz":-480,"elapsed":340,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"0defdc61-97ae-4080-f1b7-772306580520"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"]},"metadata":{},"execution_count":45}],"source":["# Train the Model\n","\n","model_lin_reg.fit(X_train_final, y_train)"]},{"cell_type":"markdown","source":["## Model Training Logistic Regression"],"metadata":{"id":"YcHsFnJGVfvd"}},{"cell_type":"code","source":["model_log_reg.fit(X_train_num_scaled1, y_train_encoded)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9uvjb_xSFwzF","executionInfo":{"status":"ok","timestamp":1655700047714,"user_tz":-480,"elapsed":338,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"292e293c-95c4-43b1-e23f-667fa93292cc"},"execution_count":111,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"]},"metadata":{},"execution_count":111}]},{"cell_type":"markdown","metadata":{"id":"a8ENZsOwceSk"},"source":["# 9 - Model Evaluation"]},{"cell_type":"markdown","metadata":{"id":"eBgrESkbceSl"},"source":["> Pada bagian ini, dilakukan evaluasi model yang harus menunjukkan bagaimana performa model berdasarkan metrics yang dipilih. Hal ini harus dibuktikan dengan visualisasi tren performa dan/atau tingkat kesalahan model. Lakukan analisis terkait dengan hasil pada model dan tuliskan hasil analisisnya."]},{"cell_type":"markdown","source":["## Model Evaluation Linear Regression"],"metadata":{"id":"IowmROjnWVxs"}},{"cell_type":"code","execution_count":46,"metadata":{"id":"wHYr-EFBceSl","executionInfo":{"status":"ok","timestamp":1655694638463,"user_tz":-480,"elapsed":351,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}}},"outputs":[],"source":["# Prediksi dari Train-Set and Test-Set\n","\n","y_pred_train = model_lin_reg.predict(X_train_final) # memprediksi model train\n","y_pred_test = model_lin_reg.predict(X_test_final) # memprediksi model test"]},{"cell_type":"code","execution_count":47,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gPbYdA-MceSm","executionInfo":{"status":"ok","timestamp":1655694643522,"user_tz":-480,"elapsed":357,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"e472271e-c7ac-459b-9c86-fd0e85ee2fdb"},"outputs":[{"output_type":"stream","name":"stdout","text":["r2score train =  0.7555619960069528\n","r2score test =  0.7095764140778124\n"]}],"source":["# Model Evaluation menggunakan R2\n","# Berdasarkan matriks R2 akan kita lihat seberapa besar variabel fitur mempengaruhi variabel target, semakin nilainy amendekati satu maka model prediksi akan baik\n","\n","print('r2score train = ', r2_score(y_train, y_pred_train))\n","print('r2score test = ', r2_score(y_test, y_pred_test))"]},{"cell_type":"markdown","source":["Model Evaluation yang di hasilkan bahwa variabel fitur memiliki pengaruh persentase sebesar 75.55%% terhadap training set dan 70.95% terhadap testing set."],"metadata":{"id":"8VqKE6EqYncs"}},{"cell_type":"markdown","source":["## Model Evaluation Logistic Regression"],"metadata":{"id":"kIlFQ1SzWeBZ"}},{"cell_type":"code","source":["# Prediksi dari Train-Set and Test-Set\n","\n","y_pred_train1 = model_log_reg.predict(X_train_num_scaled1) # memprediksi model train\n","y_pred_test1 = model_log_reg.predict(X_test_num_scaled1) # memprediksi model test"],"metadata":{"id":"KMPc0qgcWdcq","executionInfo":{"status":"ok","timestamp":1655700054523,"user_tz":-480,"elapsed":471,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}}},"execution_count":112,"outputs":[]},{"cell_type":"code","source":["# Model Evaluation menggunakan Accuracy\n","# Berdasarkan matriks Accuracy akan kita lihat seberapa besar variabel fitur mempengaruhi variabel target galaksi elips dan galaksi spiral\n","\n","print('Accuracy Score - galaksi elips  : ', accuracy_score(y_train1, y_pred_train1))\n","print('Accuracy Score - galaksi spiral : ', accuracy_score(y_test1, y_pred_test1))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GZHP2Kw8Wmyu","executionInfo":{"status":"ok","timestamp":1655700057443,"user_tz":-480,"elapsed":15,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"a520f57c-8384-40af-cca9-2edb7a4b89e2"},"execution_count":113,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy Score - galaksi elips  :  0.8162206103051526\n","Accuracy Score - galaksi spiral :  0.7306153076538269\n"]}]},{"cell_type":"markdown","metadata":{"id":"U334JaP9ceSp"},"source":["Model Evaluation yang di hasilkan bahwa variabel fitur memiliki terhadap pengaruh galaksi elips sebesar 0.8 dan terhadap pengaruh galaksi spiral dan 0.7."]},{"cell_type":"markdown","metadata":{"id":"WzEK3rbKceSp"},"source":["# 10 - Model Inference"]},{"cell_type":"markdown","metadata":{"id":"x6qMDPE_ceSp"},"source":["> Model yang sudah dilatih akan dicoba pada data yang bukan termasuk ke dalam train-set ataupun test-set. Data ini harus dalam format yang asli, bukan data yang sudah di-scaled."]},{"cell_type":"markdown","source":["## Model inference Linear Regression"],"metadata":{"id":"c7tqgqfyZOM6"}},{"cell_type":"code","execution_count":48,"metadata":{"id":"QqqC2W6lceSq","executionInfo":{"status":"ok","timestamp":1655694704910,"user_tz":-480,"elapsed":347,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}}},"outputs":[],"source":["# Save the Files\n","\n","import joblib\n","import json\n","\n","with open('model_lin_reg.pkl', 'wb') as file_1:\n","  joblib.dump(model_lin_reg, file_1) \n","\n","with open('model_scaler.pkl', 'wb') as file_2:\n","  joblib.dump(scaler, file_2) \n","\n","with open('model_encoder.pkl', 'wb') as file_3:\n","  joblib.dump(encoder, file_3)\n","\n","with open('list_num_cols.txt', 'w') as file_4:\n","  json.dump(KolomNumerik, file_4)\n","\n","with open('list_cat_cols.txt', 'w') as file_5:\n","  json.dump(KolomKategorik, file_5) "]},{"cell_type":"markdown","metadata":{"id":"xlVRruMJceSq"},"source":["### a - Loading Model"]},{"cell_type":"code","execution_count":49,"metadata":{"id":"hEowYcjXceSq","executionInfo":{"status":"ok","timestamp":1655694709081,"user_tz":-480,"elapsed":512,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}}},"outputs":[],"source":["# Load All Files\n","import joblib\n","import json\n","\n","with open('model_lin_reg.pkl', 'rb') as file_1:\n","  model_lin_reg = joblib.load(file_1)\n","\n","with open('model_scaler.pkl', 'rb') as file_2:\n","  model_scaler = joblib.load(file_2)\n","\n","with open('model_encoder.pkl', 'rb') as file_3:\n","  model_encoder = joblib.load(file_3)\n","\n","with open('list_num_cols.txt', 'r') as file_4:\n","  list_num_cols = json.load(file_4)\n","\n","with open('list_cat_cols.txt', 'rb') as file_5:\n","  list_cat_cols = json.load(file_5)"]},{"cell_type":"markdown","source":["### b - Loading Data Inference"],"metadata":{"id":"y1XmD2ClaGe0"}},{"cell_type":"code","execution_count":50,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"wqOz2k88ceSr","executionInfo":{"status":"ok","timestamp":1655694713427,"user_tz":-480,"elapsed":365,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"822000d6-b6ac-4768-e7e9-9695f989ece8"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      usia jeniskelamin     bmi  children perokok    wilayah        biaya\n","1238    37         male  22.705         3      no  northeast   6985.50695\n","677     60         male  31.350         3     yes  northwest  46130.52650\n","908     63         male  39.800         3      no  southwest  15170.06900\n","465     30       female  28.380         1     yes  southeast  19521.96820\n","1129    19       female  18.600         0      no  southwest   1728.89700\n","1013    48         male  32.300         1      no  northwest   8765.24900\n","994     27       female  20.045         3     yes  northwest  16420.49455\n","107     26         male  30.875         2      no  northwest   3877.30425\n","1218    46       female  34.600         1     yes  southwest  41661.60200\n","924     43         male  23.200         0      no  southwest   6250.43500"],"text/html":["\n","  <div id=\"df-a2f32dbb-ef61-4a57-8769-4c666d01df12\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>usia</th>\n","      <th>jeniskelamin</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>perokok</th>\n","      <th>wilayah</th>\n","      <th>biaya</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1238</th>\n","      <td>37</td>\n","      <td>male</td>\n","      <td>22.705</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>northeast</td>\n","      <td>6985.50695</td>\n","    </tr>\n","    <tr>\n","      <th>677</th>\n","      <td>60</td>\n","      <td>male</td>\n","      <td>31.350</td>\n","      <td>3</td>\n","      <td>yes</td>\n","      <td>northwest</td>\n","      <td>46130.52650</td>\n","    </tr>\n","    <tr>\n","      <th>908</th>\n","      <td>63</td>\n","      <td>male</td>\n","      <td>39.800</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>southwest</td>\n","      <td>15170.06900</td>\n","    </tr>\n","    <tr>\n","      <th>465</th>\n","      <td>30</td>\n","      <td>female</td>\n","      <td>28.380</td>\n","      <td>1</td>\n","      <td>yes</td>\n","      <td>southeast</td>\n","      <td>19521.96820</td>\n","    </tr>\n","    <tr>\n","      <th>1129</th>\n","      <td>19</td>\n","      <td>female</td>\n","      <td>18.600</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southwest</td>\n","      <td>1728.89700</td>\n","    </tr>\n","    <tr>\n","      <th>1013</th>\n","      <td>48</td>\n","      <td>male</td>\n","      <td>32.300</td>\n","      <td>1</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>8765.24900</td>\n","    </tr>\n","    <tr>\n","      <th>994</th>\n","      <td>27</td>\n","      <td>female</td>\n","      <td>20.045</td>\n","      <td>3</td>\n","      <td>yes</td>\n","      <td>northwest</td>\n","      <td>16420.49455</td>\n","    </tr>\n","    <tr>\n","      <th>107</th>\n","      <td>26</td>\n","      <td>male</td>\n","      <td>30.875</td>\n","      <td>2</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>3877.30425</td>\n","    </tr>\n","    <tr>\n","      <th>1218</th>\n","      <td>46</td>\n","      <td>female</td>\n","      <td>34.600</td>\n","      <td>1</td>\n","      <td>yes</td>\n","      <td>southwest</td>\n","      <td>41661.60200</td>\n","    </tr>\n","    <tr>\n","      <th>924</th>\n","      <td>43</td>\n","      <td>male</td>\n","      <td>23.200</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southwest</td>\n","      <td>6250.43500</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a2f32dbb-ef61-4a57-8769-4c666d01df12')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a2f32dbb-ef61-4a57-8769-4c666d01df12 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a2f32dbb-ef61-4a57-8769-4c666d01df12');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":50}],"source":["# Sebelum inference kita tampilkan dulu data inference yang di awal\n","datainfernce"]},{"cell_type":"markdown","source":["### c - Feature Scaling Data Inference"],"metadata":{"id":"RY6X2x75alqQ"}},{"cell_type":"code","execution_count":51,"metadata":{"id":"vL2yBh9SceSr","executionInfo":{"status":"ok","timestamp":1655694724220,"user_tz":-480,"elapsed":391,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}}},"outputs":[],"source":["# memisahkan columns numerikal dan kategorikal data_inference\n","\n","data_inf_num = datainfernce[list_num_cols]\n","data_inf_cat = datainfernce[list_cat_cols]"]},{"cell_type":"code","execution_count":52,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vV0KzY-vceSs","executionInfo":{"status":"ok","timestamp":1655694727519,"user_tz":-480,"elapsed":535,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"e61c178b-8109-4384-dcab-92b7d8e3dfdf"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.40909091, 0.19363208],\n","       [0.93181818, 0.60141509],\n","       [1.        , 1.        ],\n","       [0.25      , 0.46132075],\n","       [0.        , 0.        ],\n","       [0.65909091, 0.64622642],\n","       [0.18181818, 0.06816038],\n","       [0.15909091, 0.57900943],\n","       [0.61363636, 0.75471698],\n","       [0.54545455, 0.21698113]])"]},"metadata":{},"execution_count":52}],"source":["scaler = MinMaxScaler() # Nilainya di ubah skalanya menjadi 0 sampai 1\n","model_scaler.fit(data_inf_num)\n","data_inf_num_scaled = model_scaler.transform(data_inf_num)\n","data_inf_num_scaled"]},{"cell_type":"markdown","source":["### d - Feature Encoding Data Inference"],"metadata":{"id":"HMbHCElDa14S"}},{"cell_type":"code","execution_count":53,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"u6268DBqceSs","executionInfo":{"status":"ok","timestamp":1655694780315,"user_tz":-480,"elapsed":368,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"1100fa5a-039c-406f-e715-cfd466635bb8"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["     jeniskelamin perokok\n","1238         male      no\n","677          male     yes\n","908          male      no\n","465        female     yes\n","1129       female      no\n","1013         male      no\n","994        female     yes\n","107          male      no\n","1218       female     yes\n","924          male      no"],"text/html":["\n","  <div id=\"df-7fe9d73d-45ae-4d9c-973a-61ef1aec5d0d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>jeniskelamin</th>\n","      <th>perokok</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1238</th>\n","      <td>male</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>677</th>\n","      <td>male</td>\n","      <td>yes</td>\n","    </tr>\n","    <tr>\n","      <th>908</th>\n","      <td>male</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>465</th>\n","      <td>female</td>\n","      <td>yes</td>\n","    </tr>\n","    <tr>\n","      <th>1129</th>\n","      <td>female</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>1013</th>\n","      <td>male</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>994</th>\n","      <td>female</td>\n","      <td>yes</td>\n","    </tr>\n","    <tr>\n","      <th>107</th>\n","      <td>male</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>1218</th>\n","      <td>female</td>\n","      <td>yes</td>\n","    </tr>\n","    <tr>\n","      <th>924</th>\n","      <td>male</td>\n","      <td>no</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7fe9d73d-45ae-4d9c-973a-61ef1aec5d0d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7fe9d73d-45ae-4d9c-973a-61ef1aec5d0d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7fe9d73d-45ae-4d9c-973a-61ef1aec5d0d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":53}],"source":["data_inf_Cat=data_inf_cat[['jeniskelamin','perokok']]\n","data_inf_Cat"]},{"cell_type":"code","source":["encoder = OneHotEncoder()\n","encoder.fit(data_inf_Cat)\n","data_inf_Cat_encoded = encoder.transform(data_inf_Cat).toarray()\n","data_inf_Cat_encoded"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yJCQ3vzjRlWZ","executionInfo":{"status":"ok","timestamp":1655694784226,"user_tz":-480,"elapsed":385,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"d43d13a8-3b9b-4673-c20a-f56dbf82520b"},"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0., 1., 1., 0.],\n","       [0., 1., 0., 1.],\n","       [0., 1., 1., 0.],\n","       [1., 0., 0., 1.],\n","       [1., 0., 1., 0.],\n","       [0., 1., 1., 0.],\n","       [1., 0., 0., 1.],\n","       [0., 1., 1., 0.],\n","       [1., 0., 0., 1.],\n","       [0., 1., 1., 0.]])"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","execution_count":55,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P9XDc9aYceSx","executionInfo":{"status":"ok","timestamp":1655694787340,"user_tz":-480,"elapsed":333,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"cca16617-e4a5-4902-bcdf-1e9f7caa7d1a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.40909091, 0.19363208, 0.        , 1.        , 1.        ,\n","        0.        ],\n","       [0.93181818, 0.60141509, 0.        , 1.        , 0.        ,\n","        1.        ],\n","       [1.        , 1.        , 0.        , 1.        , 1.        ,\n","        0.        ],\n","       [0.25      , 0.46132075, 1.        , 0.        , 0.        ,\n","        1.        ],\n","       [0.        , 0.        , 1.        , 0.        , 1.        ,\n","        0.        ],\n","       [0.65909091, 0.64622642, 0.        , 1.        , 1.        ,\n","        0.        ],\n","       [0.18181818, 0.06816038, 1.        , 0.        , 0.        ,\n","        1.        ],\n","       [0.15909091, 0.57900943, 0.        , 1.        , 1.        ,\n","        0.        ],\n","       [0.61363636, 0.75471698, 1.        , 0.        , 0.        ,\n","        1.        ],\n","       [0.54545455, 0.21698113, 0.        , 1.        , 1.        ,\n","        0.        ]])"]},"metadata":{},"execution_count":55}],"source":["# data final inference yang akan di prediksi\n","\n","data_inference_final = np.concatenate([data_inf_num_scaled, data_inf_Cat_encoded], axis=1)\n","data_inference_final"]},{"cell_type":"markdown","source":["### e - Model Evaluation Data Inference"],"metadata":{"id":"OnPhf9_KbcoZ"}},{"cell_type":"code","source":["model_lin_reg = LinearRegression()"],"metadata":{"id":"tCcr3XV1TSRM","executionInfo":{"status":"ok","timestamp":1655694792633,"user_tz":-480,"elapsed":326,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}}},"execution_count":56,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7AYDfH9GceSx"},"outputs":[],"source":["y_pred_inf = model_lin_reg.fit(data_inference_final)\n","y_pred_inf"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"A3ElfFqOceSy"},"outputs":[],"source":["# Predict using Linear Regression untuk data inference\n","\n","y_pred_inf_df = pd.DataFrame(y_pred_inf, columns=['Prediksi biaya'])\n","y_pred_inf_df"]},{"cell_type":"code","source":["datainfernce.biaya"],"metadata":{"id":"49vvfRwgg4FQ","executionInfo":{"status":"ok","timestamp":1655694825258,"user_tz":-480,"elapsed":347,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"2c515192-b13c-4f8e-8bdd-83f5b092ba45"},"execution_count":60,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1238     6985.50695\n","677     46130.52650\n","908     15170.06900\n","465     19521.96820\n","1129     1728.89700\n","1013     8765.24900\n","994     16420.49455\n","107      3877.30425\n","1218    41661.60200\n","924      6250.43500\n","Name: biaya, dtype: float64"]},"metadata":{},"execution_count":60}]},{"cell_type":"markdown","source":["## Model Inference Logistic Regression"],"metadata":{"id":"-QzgYiYUZjPD"}},{"cell_type":"code","source":["# Save the Files\n","\n","import joblib\n","import json\n","\n","with open('model_log_reg.pkl', 'wb') as file_1:\n","  joblib.dump(model_log_reg, file_1) \n","\n","with open('model_scaler1.pkl', 'wb') as file_2:\n","  joblib.dump(scaler1, file_2) \n","\n","with open('model_encoder1.pkl', 'wb') as file_3:\n","  joblib.dump(encoder1, file_3)\n","\n","with open('list_num_cols1.txt', 'w') as file_4:\n","  json.dump(KolomNumerik1, file_4)"],"metadata":{"id":"R4pN3AsZZzkN","executionInfo":{"status":"ok","timestamp":1655700081517,"user_tz":-480,"elapsed":577,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}}},"execution_count":114,"outputs":[]},{"cell_type":"markdown","source":["### a - loading Model"],"metadata":{"id":"EBrDHVaFZriD"}},{"cell_type":"code","source":["# Load All Files\n","import joblib\n","import json\n","\n","with open('model_log_reg.pkl', 'rb') as file_1:\n","  model_log_reg = joblib.load(file_1)\n","\n","with open('model_scaler1.pkl', 'rb') as file_2:\n","  model_scaler1 = joblib.load(file_2)\n","\n","with open('model_encoder1.pkl', 'rb') as file_3:\n","  model_encoder1 = joblib.load(file_3)\n","\n","with open('list_num_cols1.txt', 'r') as file_4:\n","  list_num_cols1 = json.load(file_4)"],"metadata":{"id":"wqzAj4w7ZpR2","executionInfo":{"status":"ok","timestamp":1655700171089,"user_tz":-480,"elapsed":15,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}}},"execution_count":115,"outputs":[]},{"cell_type":"markdown","source":["### b - Loading Data Inference"],"metadata":{"id":"gzH-c8ePa74U"}},{"cell_type":"code","source":["# Sebelum inference kita tampilkan dulu data inference yang di awal\n","datainfernce1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"S7PiQYXobAzi","executionInfo":{"status":"ok","timestamp":1655700210044,"user_tz":-480,"elapsed":386,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"78a58cce-e0b6-4b38-af51-635090500e96"},"execution_count":116,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0     TType          K            C         A         S        G2  \\\n","0        2953  3.331900  27.923831     0.327536  0.749086  0.805582  1.593298   \n","1       12758 -1.168409   3.267242     0.365285  0.909178  0.881981  1.189916   \n","2       11794 -2.453251   6.348010 -9999.999999  0.782347  0.847836  0.857569   \n","3       16721 -1.577499  23.808023     0.429137  0.816243  0.762535  1.132787   \n","4        1276 -0.548032  11.675401     0.523664  0.827054  0.844778  1.437644   \n","5         991 -2.210423  15.544851     0.399772  0.909889  0.850461  1.229330   \n","6        6704 -1.114931   5.087607 -9999.999999  0.907892  0.915372  1.105434   \n","7        6330 -1.966130   9.616412 -9999.999999  0.979614  0.526035  0.388008   \n","8        5207  2.380726  22.394027     0.277146  0.721813  0.814747  1.421461   \n","9        7261  0.007252   7.164415     0.409127  0.928519  0.860300  1.101345   \n","\n","          H  target  \n","0  0.751642       1  \n","1  0.634100       0  \n","2  0.573068       1  \n","3  0.572717       1  \n","4  0.644234       1  \n","5  0.643354       1  \n","6  0.622796       1  \n","7  0.461513       0  \n","8  0.830230       1  \n","9  0.618623       1  "],"text/html":["\n","  <div id=\"df-c7c188b5-f7e1-4ba6-8ece-dff0789b9ee3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>TType</th>\n","      <th>K</th>\n","      <th>C</th>\n","      <th>A</th>\n","      <th>S</th>\n","      <th>G2</th>\n","      <th>H</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2953</td>\n","      <td>3.331900</td>\n","      <td>27.923831</td>\n","      <td>0.327536</td>\n","      <td>0.749086</td>\n","      <td>0.805582</td>\n","      <td>1.593298</td>\n","      <td>0.751642</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>12758</td>\n","      <td>-1.168409</td>\n","      <td>3.267242</td>\n","      <td>0.365285</td>\n","      <td>0.909178</td>\n","      <td>0.881981</td>\n","      <td>1.189916</td>\n","      <td>0.634100</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>11794</td>\n","      <td>-2.453251</td>\n","      <td>6.348010</td>\n","      <td>-9999.999999</td>\n","      <td>0.782347</td>\n","      <td>0.847836</td>\n","      <td>0.857569</td>\n","      <td>0.573068</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>16721</td>\n","      <td>-1.577499</td>\n","      <td>23.808023</td>\n","      <td>0.429137</td>\n","      <td>0.816243</td>\n","      <td>0.762535</td>\n","      <td>1.132787</td>\n","      <td>0.572717</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1276</td>\n","      <td>-0.548032</td>\n","      <td>11.675401</td>\n","      <td>0.523664</td>\n","      <td>0.827054</td>\n","      <td>0.844778</td>\n","      <td>1.437644</td>\n","      <td>0.644234</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>991</td>\n","      <td>-2.210423</td>\n","      <td>15.544851</td>\n","      <td>0.399772</td>\n","      <td>0.909889</td>\n","      <td>0.850461</td>\n","      <td>1.229330</td>\n","      <td>0.643354</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6704</td>\n","      <td>-1.114931</td>\n","      <td>5.087607</td>\n","      <td>-9999.999999</td>\n","      <td>0.907892</td>\n","      <td>0.915372</td>\n","      <td>1.105434</td>\n","      <td>0.622796</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>6330</td>\n","      <td>-1.966130</td>\n","      <td>9.616412</td>\n","      <td>-9999.999999</td>\n","      <td>0.979614</td>\n","      <td>0.526035</td>\n","      <td>0.388008</td>\n","      <td>0.461513</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>5207</td>\n","      <td>2.380726</td>\n","      <td>22.394027</td>\n","      <td>0.277146</td>\n","      <td>0.721813</td>\n","      <td>0.814747</td>\n","      <td>1.421461</td>\n","      <td>0.830230</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>7261</td>\n","      <td>0.007252</td>\n","      <td>7.164415</td>\n","      <td>0.409127</td>\n","      <td>0.928519</td>\n","      <td>0.860300</td>\n","      <td>1.101345</td>\n","      <td>0.618623</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c7c188b5-f7e1-4ba6-8ece-dff0789b9ee3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c7c188b5-f7e1-4ba6-8ece-dff0789b9ee3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c7c188b5-f7e1-4ba6-8ece-dff0789b9ee3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":116}]},{"cell_type":"markdown","source":["### c - Feature Scaling Data Inference"],"metadata":{"id":"egR2ugG-bHpu"}},{"cell_type":"code","source":["# memisahkan columns numerikal dan kategorikal data_inference\n","\n","data_inf_num1 = datainfernce1[list_num_cols1]"],"metadata":{"id":"j7IjHScbbM99","executionInfo":{"status":"ok","timestamp":1655700304723,"user_tz":-480,"elapsed":393,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}}},"execution_count":117,"outputs":[]},{"cell_type":"code","source":["scaler1 = MinMaxScaler() # Nilainya di ubah skalanya menjadi 0 sampai 1\n","model_scaler1.fit(data_inf_num1)\n","data_inf_scaled1 = model_scaler1.transform(data_inf_num1)\n","data_inf_scaled1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ySfe4mxhbRwQ","executionInfo":{"status":"ok","timestamp":1655700334858,"user_tz":-480,"elapsed":336,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"3e58e6aa-466b-4289-b0de-d95af990ca28"},"execution_count":118,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.99998039, 0.10579254, 0.71800879, 1.        , 0.78686219],\n","       [0.99998416, 0.72678028, 0.9142362 , 0.66532422, 0.46807657],\n","       [0.        , 0.23480954, 0.82653623, 0.38958385, 0.30255012],\n","       [0.99999055, 0.36628979, 0.60744308, 0.61792555, 0.30159927],\n","       [1.        , 0.40822444, 0.81868258, 0.87085826, 0.49556085],\n","       [0.99998761, 0.72953878, 0.83327873, 0.69802511, 0.4931729 ],\n","       [0.        , 0.72179136, 1.        , 0.59523108, 0.43741918],\n","       [0.        , 1.        , 0.        , 0.        , 0.        ],\n","       [0.99997535, 0.        , 0.74154692, 0.8574314 , 1.        ],\n","       [0.99998855, 0.80180372, 0.85855032, 0.59183904, 0.42610064]])"]},"metadata":{},"execution_count":118}]},{"cell_type":"markdown","source":["### d - Feature Encoding Data Inference"],"metadata":{"id":"Utui1DvbbjZe"}},{"cell_type":"code","source":["data_inf_Cat1=datainfernce1['target']\n","data_inf_Cat1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cxd5VoNDb1V-","executionInfo":{"status":"ok","timestamp":1655700509637,"user_tz":-480,"elapsed":357,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"0e696149-0fd5-4caa-f941-90ddf05bf0d6"},"execution_count":122,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    1\n","1    0\n","2    1\n","3    1\n","4    1\n","5    1\n","6    1\n","7    0\n","8    1\n","9    1\n","Name: target, dtype: int64"]},"metadata":{},"execution_count":122}]},{"cell_type":"code","source":["encoder1 = LabelEncoder()\n","encoder1.fit(data_inf_Cat1)\n","data_inf_encoded = encoder1.transform(data_inf_Cat1)\n","data_inf_encoded"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fOPl20_ybr4a","executionInfo":{"status":"ok","timestamp":1655700640662,"user_tz":-480,"elapsed":15,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}},"outputId":"de3323e2-69cd-42e2-ab62-24f2ae249aad"},"execution_count":125,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 0, 1, 1, 1, 1, 1, 0, 1, 1])"]},"metadata":{},"execution_count":125}]},{"cell_type":"markdown","source":["### e - Model Evaluation Data Inference"],"metadata":{"id":"JW8rZ6IMcy7S"}},{"cell_type":"code","source":["model_log_reg = LogisticRegression()"],"metadata":{"id":"372GvRkqc4mO","executionInfo":{"status":"ok","timestamp":1655700747001,"user_tz":-480,"elapsed":355,"user":{"displayName":"Hillidatul Ilmi","userId":"07932027707791477475"}}},"execution_count":126,"outputs":[]},{"cell_type":"markdown","source":["# 11 - Penarikkan Kesimpulan"],"metadata":{"id":"xZxDUtZJboJn"}},{"cell_type":"markdown","source":["## Kesimpulan Linear Regression"],"metadata":{"id":"XKePx1SsdTgM"}},{"cell_type":"markdown","source":["1. Kesimpulan Exploratory Data Analysis (EDA)\n","Berdasarkan visualisasi histogram data biaya asuransi cendrung menunjukkan kisaran harga sebesar 90000 dolar sampai 99000 dolar. informasi untuk masyarakat pengguna asuransi bisa membayar kategori biya tersebut yang lebih umum di gunakan. Sedangkan untuk jenis kelamin yang lebih sering mengeluarkan biaya asuransi adalah laki-laki, mungkin hal ini sesuai dengan beberapa perkerjaan yang di tanggung. Yang berupa perkerjaan dengan resiko tinggi.\n","2. Model Regresi linear sederhana Model Evaluation yang di hasilkan bahwa variabel fitur memiliki pengaruh persentase sebesar 75.55%% terhadap training set dan 70.95% terhadap testing set. Yang menandakan seberapa besar fitur mempengaruhi target."],"metadata":{"id":"EvY_4iIrdYA2"}},{"cell_type":"markdown","source":["## Kesimpulan Logistic Regression\n"],"metadata":{"id":"nlVpUN1vfFvJ"}},{"cell_type":"markdown","source":["1. Kesimpulan Exploratory Data Analysis (EDA) Berdasarkan visualisasi diagram batang bahwa galaksi elips lebih besar daripada galaksi spiral.\n","2. Model Evaluation yang di hasilkan bahwa variabel fitur memiliki terhadap pengaruh galaksi elips sebesar 0.8 dan terhadap pengaruh galaksi spiral dan 0.7."],"metadata":{"id":"cmmstaVgfLwx"}}],"metadata":{"kernelspec":{"display_name":"Python 3.10.4 64-bit","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.4"},"orig_nbformat":4,"vscode":{"interpreter":{"hash":"0c9598bad852d241a266e00f4a396ca4d4e981649d84c59e5c608161c8fead6b"}},"colab":{"name":"h8dsft_P1LC1_Set_1_Hillidatul_ilmi","provenance":[],"collapsed_sections":[],"toc_visible":true}},"nbformat":4,"nbformat_minor":0}